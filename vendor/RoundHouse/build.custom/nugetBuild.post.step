<?xml version="1.0" encoding="utf-8"?>
<project name="CUSTOM REPLACE NUGETBUILD" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="path.to.toplevel" value=".." />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="dirs.build_scripts" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts}" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.code_build" value="build_output" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_build}" />
  <property name="folder.code_drop" value="code_drop" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_drop}" overwrite="false" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="folder.database" value="__DATABASE_FOLDER_NAME__" overwrite="false" />
  <property name="dirs.database" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.database}" overwrite="false" />
  <property name="folder.reports" value="${project.name}.Reports" overwrite="false" />
  <property name="dirs.reports" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.reports}" overwrite="false" />
  <property name="folder.file_server" value="file.server" overwrite="false" />
  <property name="dirs.file_server" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.file_server}" overwrite="false" />
  <property name="folder.environment_files" value="environment.files" overwrite="false" />
  <property name="dirs.environment_files" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.environment_files}" overwrite="false" />
  <property name="folder.deployment" value="deployment" overwrite="false" />
  <property name="dirs.deployment" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.deployment}" overwrite="false" />
  <property name="folder.settings" value="settings" overwrite="false" />
  <property name="dirs.settings" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.settings}" overwrite="false" />
  <property name="folder.documentation" value="docs" overwrite="false" />
  <property name="folder.nuget" value="nuget" overwrite="false" />
  <property name="dirs.nuget" value="${path.to.toplevel}${path.separator}${folder.nuget}" overwrite="false" />
  <property name="dirs.drop.nuget" value="${dirs.drop}${path.separator}${folder.nuget}" overwrite="false" />
  <property name="folder.nuget.exists" value="${directory::exists(dirs.nuget)}" />
  <property name="version.major" value="1" overwrite="false" />
  <property name="version.minor" value="0" overwrite="false" />
  <property name="version.build" value="0" overwrite="false" />
  <property name="version.revision" value="0" overwrite="false" />
  <property name="assembly.version.full" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
  <property name="app.nuget" value="..${path.separator}..${path.separator}${folder.references}${path.separator}NuGet${path.separator}NuGet.exe" overwrite="false" />
  <property name="app.nuget" value="${path::get-full-path(app.nuget)}" />
  <property name="app.nuget.exists" value="${file::exists(app.nuget)}" />
  
  <target name="go" depends="run_tasks" if="${folder.nuget.exists and app.nuget.exists}" />

  <target name="run_tasks"
          depends="flatten_files"
          description="" />

  <target name="flatten_files">
    <echo level="Warning" message="Bringing nupkg files up to '${dirs.drop.nuget}' directory" />
    <copy todir="${dirs.drop.nuget}" flatten="true">
      <fileset basedir="${dirs.drop.nuget}">
        <include name="**/*.nupkg" />
      </fileset>
    </copy>
    
    <delete>
      <fileset basedir="${dirs.drop.nuget}" >
        <exclude name="*.nupkg" />
        <include name="**/*" />
      </fileset>
    </delete>    
  </target>
  
</project>