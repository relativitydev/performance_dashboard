
PRINT N'This update script will handle changes made in the 2013-06-06, 2013-06-25, 2013-08-02, and 2013-09-12 releases of PDB'
GO

PRINT N'2013-06-06 Changes'
PRINT N' Add DocumentCount to BISSummary table'
PRINT N' Add totalQTime to LRQCountDW table'
GO

IF COL_LENGTH('eddsdbo.BISSummary','DocumentCount') IS NULL
	BEGIN
		ALTER TABLE eddsdbo.BISSummary ADD [DocumentCount] [bigint] NULL
	END
GO

IF COL_LENGTH('eddsdbo.LRQCountDW','totalQtime') IS NULL
	BEGIN
		ALTER TABLE eddsdbo.LRQCountDW ADD [totalQtime] [int] NULL
	END
GO

PRINT N'2013-06-25 Changes'
PRINT N' UpdateBISScores sproc update'
PRINT N' GetBISHealthData sproc update'
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[eddsdbo].UpdateBISScores') AND type in (N'P', N'PC'))
DROP PROCEDURE [eddsdbo].[UpdateBISScores]
GO
DECLARE @_ AS VARBINARY(MAX)
SET @_ = 
EXEC (@_)
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[eddsdbo].[GetBISHealthData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [eddsdbo].[GetBISHealthData]
GO
CREATE PROCEDURE [eddsdbo].[GetBISHealthData]
(
	@WorkspaceId int,
	@StartDate	DATETIME = NULL,
	@EndDate	DATETIME = NULL,
	@TimeZoneOffset int
)
WITH ENCRYPTION  
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @pwd NVarchar(100)
	SET @pwd = 'kCuraPassword1!'
	
	Set @TimeZoneOffset  = DATEDIFF(MINUTE, GETUTCDATE(), GETDATE()) * -1
	
	IF (@StartDate IS NULL AND @EndDate IS NULL)
		BEGIN
			SELECT @StartDate = DATEADD(HH,-23,DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, GETUTCDATE())) ,0))				
			SET @EndDate = @StartDate			
		END
	ELSE
		BEGIN
			Set @StartDate = DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, @StartDate)) ,0)
			Set @EndDate = DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, @EndDate)) ,0)
		END
	
	SELECT
		ROW_NUMBER() OVER(ORDER BY WS.CaseArtifactID, DR.DateRange) AS Id								
		, WS.CaseArtifactID as CaseArtifactID
		, WS.WorkspaceName as WorkspaceName						
		, DR.DateRange as MeasureDate
		, ISNULL(PS.BISIndicator,0) AS BISIndicator
	FROM 
		[eddsdbo].GetDateRange(CAST(@StartDate as DATE), CAST(@EndDate as DATE)) DR
		CROSS JOIN 
		(
			SELECT DISTINCT 
				w.CaseArtifactID
				,w.WorkspaceName
			FROM 
				eddsdbo.EDDSWorkspace w 
			WHERE
				w.CaseArtifactID = @WorkspaceId
		) AS WS		
		LEFT JOIN 
		(
			SELECT 
				BS.CaseArtifactID
				, MeasureDate AS [MeasureDate]
				, Convert(int,
					  Convert(nvarchar(max), 
						DecryptByPassPhrase(@pwd, 
							CONVERT(nvarchar(max),BS.StatusDay), 
							1, 
							CONVERT( varbinary, MeasureDate)
						)
					)
				  ) AS [BISIndicator]
			FROM 
				eddsdbo.BISSummary BS
			WHERE 
				MeasureDate >=  CAST(@StartDate as DATE)
				AND MeasureDate < DATEADD(DAY, +1, CAST(@EndDate as DATE))
				AND BS.CaseArtifactID = @WorkspaceId
		) AS PS on PS.MeasureDate = dr.DateRange 
		AND WS.CaseArtifactID = PS.CaseArtifactID
END
GO

PRINT N'2013-08-02 and 08-19 Changes'
PRINT N' LoadBISSummary sproc changes (all inclusive, with 06-06 and 06-25 and 09-12 changes)'
GO

/****** Code Updated 2013-08-19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[eddsdbo].[LoadBISSummary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [eddsdbo].[LoadBISSummary]
GO
-- =============================================
-- Author:		Ron@Milyli
-- Create date: 2012-06-01
-- Description:	
-- 2013-02-18 : Ron@Milyli : Added new TotalNRQCount field
-- 2013-02-18 : Ron@Milyli : Added the field encryption code
-- 2013-06-05 : David@Milyli.com : added support for a timezone offset
-- 2013-08-01 : Ron@Milyli : Added DateAdd(DAY, DateDiff(DAY, 0, Cast(MeasureDate As datetime)), Cast(cast(MeasureHour as varchar) + '':00:00.000'' as datetime))
-- 2013-08-19 : Ron@Milyli : Added CAST( AS DATE) around the above calculation
-- 2013-09-10 : Ron@Milyli : Added in DocumentCount loader (this was missed in previous merge -- code orignally written 06/2013
-- =============================================
CREATEPROCEDURE [eddsdbo].[LoadBISSummary]
	@ProcessExecDate DateTime, 
	@TimeZoneOffset int
 
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @pwd NVarchar(100)
	SET @pwd = 'kCuraPassword1!'

	set @TimeZoneOffset  = DATEDIFF(MINUTE, GETUTCDATE(), GETDATE()) * -1
	
	Declare @SummaryMeasureDate DateTime
	Declare @MeasureDate Date
	
	--Select @MeasureDate = Cast(@ProcessExecDate as Date)
	Select @MeasureDate = DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, @ProcessExecDate)) ,0)
	Select @SummaryMeasureDate = @MeasureDate

	--BISSummary data is already converted to local time
	IF EXISTS(Select 1 From eddsdbo.BISSummary Where MeasureDate = @SummaryMeasureDate)
	BEGIN 
	  --Existing data for the date, run an update
	  BEGIN TRAN
		UPDATE BISSummary
		SET TQCount = COALESCE(LC.TQCount,0),
			TotalNRQCount = COALESCE(LC.TotalNRQCount, 0),
			NRLRQCount = COALESCE(LC.NRLRQCount,0),
			DocumentCount = COALESCE(CS.DocumentCount,0)
		FROM
			eddsdbo.BISSummary BS
			
			LEFT JOIN
             (SELECT CaseArtifactID, DocumentCount
                FROM EDDS.eddsdbo.CaseStatistics
                WHERE (CAST(DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, timestamp)), 0) AS DATE) = @MeasureDate)) AS CS 
                ON BS.CaseArtifactID = CS.CaseArtifactID 
				
			Left Join (Select CaseArtifactID, SUM(TotalQCount) TQCount, SUM(TotalNRQCount) TotalNRQCount, SUM(LRQCount) LRQCount, SUM(NRLRQCount) NRLRQCount   
			From eddsdbo.LRQCountDW where cast(DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, DateAdd(DAY, DateDiff(DAY, 0, Cast(MeasureDate As datetime)), Cast(cast(MeasureHour as varchar) + ':00:00.000' as datetime)))) ,0) as DATE) = @MeasureDate Group By CaseArtifactID) LC
			On BS.CaseArtifactID = LC.CaseArtifactID 
			AND BS.MeasureDate = @MeasureDate	
			
	  COMMIT TRAN 

	END

	ELSE

	BEGIN
	    --New day, so do an initial insert
		BEGIN TRAN
 			INSERT BISSummary (CreatedOn, CaseArtifactID, MeasureDate, TQCount, TotalNRQCount, NRLRQCount, StatusDay, Status90Days, StatusPercentageNRLRQDay, StatusPercentageNRLRQ90Days, DocumentCount)
			SELECT 
				GetUTCDate() CreatedOn, 
				C.ArtifactID CaseArtifactID, 	
				@SummaryMeasureDate MeasureDate, 
				COALESCE(LC.TQCount,0) TQCount, 
			    COALESCE(LC.TotalNRQCount, 0) TotalNRQCount,
				COALESCE(LC.NRLRQCount,0) NRLRQCount, 
				EncryptByPassPhrase(@pwd,N'-1',1,CONVERT( varbinary, @SummaryMeasureDate)) StatusDay,
				EncryptByPassPhrase(@pwd,N'-1',1,CONVERT( varbinary, @SummaryMeasureDate)) Status90Days,
				-1  StatusPercentageNRLRQDay,
				-1 StatusPercentageNRLRQ90Days,
				COALESCE(CS.DocumentCount,0) DocumentCount
			From
			  EDDS.eddsdbo.[Case] C
			  
			  LEFT JOIN
                  (SELECT CaseArtifactID, DocumentCount
                    FROM EDDS.eddsdbo.CaseStatistics
                    WHERE (DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, CAST(timestamp AS Date))), 0) = @MeasureDate)) AS CS 
                    ON C.ArtifactID = CS.CaseArtifactID 
					
			Left Join (Select CaseArtifactID, SUM(TotalQCount) TQCount, SUM(TotalNRQCount) TotalNRQCount, SUM(LRQCount) LRQCount, SUM(NRLRQCount) NRLRQCount   
			From eddsdbo.LRQCountDW 
			Where cast(DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, DateAdd(DAY, DateDiff(DAY, 0, Cast(MeasureDate As datetime)), Cast(cast(MeasureHour as varchar) + ':00:00.000' as datetime)))) ,0) as DATE) = @MeasureDate Group By CaseArtifactID) LC
			On C.ArtifactID = LC.CaseArtifactID

		COMMIT TRAN
	END
END

GO

PRINT N'2013-09-12 Changes'
PRINT N' GetApplicationHealthData sproc change (updated logic)'
GO


/****** Code Updated 2013-09-12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[eddsdbo].[GetApplicationHealthData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [eddsdbo].[GetApplicationHealthData]
GO

CREATE PROCEDURE [eddsdbo].[GetApplicationHealthData]

	@StartDate	DATETIME = NULL,
	@EndDate	DATETIME = NULL,
	@TimeZoneOffset int

WITH ENCRYPTION
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @pwd NVarchar(100)
	SET @pwd = 'kCuraPassword1!'
	
	--2013-09-30 - Ron@Milyli - Invert the timezone offset (testing - wip)
	SET @TimeZoneOffset = @TimeZoneOffset * -1
	
	IF (@StartDate IS NULL AND @EndDate IS NULL)
		BEGIN
			--SELECT @StartDate = DATEADD(HH, - 23, GETUTCDATE())
			SELECT @StartDate = DATEADD(HH,-23,DATEADD(HOUR, DATEDIFF(HH, 0, DATEADD(MINUTE, @TimeZoneOffset, GETUTCDATE())) ,0))				
			SET @EndDate = @StartDate			
		END
	
	-- Insert statements for procedure here
	 IF (@StartDate = @EndDate)		
		 BEGIN		 
			SELECT
				ROW_NUMBER() OVER(ORDER BY WS.CaseArtifactID, DateRange) AS Id				
				, ISNULL(WS.CaseArtifactID,0) as CaseArtifactID
				, ISNULL(WS.WorkspaceName,'') as WorkspaceName				
				, ISNULL(WS.[DatabaseLocation],'') as [DatabaseLocation]
				, dr.DateRange as MeasureDate
				, ISNULL(PS.UserCount, -1) AS UserCount
				, ISNULL(PS.ErrorCount, -1) AS ErrorCount
				, ISNULL(PS.LRQCount, -1) AS LRQCount
				, ISNULL(PS.AverageLatency,-1) AS AverageLatency
				,			CASE
				--Fail/Poor
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) <= 1000000) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 15) then 3 --Fail/Poor
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) BETWEEN 1000001 AND 3000000) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 22.5) then 3 --Fail/Poor
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) BETWEEN 3000001 AND 5000000) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 32.5) then 3 --Fail/Poor
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) >= 5000001) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 40) then 3 --Fail/Poor
				--Probation/Moderate
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) <= 1000000) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 10) then 2 --Probation/Moderate
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) BETWEEN 1000001 AND 3000000) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 17.5) then 2 --Probation/Moderate 
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) BETWEEN 3000001 AND 5000000) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 27.5) then 2 --Probation/Moderate
				WHEN (BIS.NRLRQCount >= 50) AND (COALESCE(DocumentCount,0) >= 5000001) AND ( CONVERT(integer, (ISNULL((CONVERT(decimal, BIS.NRLRQCount) / NULLIF(CONVERT(decimal, TotalNRQCount),0)),0)) * 100) >= 35) then 2 --Probation/Moderate
				--Passed
				ELSE 1 --Passed
			END AS BISIndicator
				,ISNULL(BIS.TotalQCount,0) AS TQCount
			FROM [eddsdbo].GetDateRange(@StartDate, @EndDate) dr
				CROSS JOIN 
				(
					SELECT DISTINCT 
						w.CaseArtifactID
						, w.WorkspaceName
						, w.[DatabaseLocation]
					FROM eddsdbo.EDDSWorkspace w				
						JOIN eddsdbo.PerformanceSummary PC on PC.CaseArtifactID = w.CaseArtifactID 				
							AND DATEADD(MI, @TimeZoneOffset, MeasureDate) >= @StartDate 
							AND DATEADD(MI, @TimeZoneOffset, MeasureDate) < @EndDate + 1
				) as WS
				LEFT JOIN eddsdbo.PerformanceSummary PS
					ON DATEADD(MI, @TimeZoneOffset, DATEADD(HOUR, DATEPART(HOUR,MeasureDate), CONVERT(varchar(10), MeasureDate ,101))) = DATEADD(HOUR, DATEPART(HOUR,dr.DateRange), CONVERT(varchar(10), dr.DateRange,101))				    			  
						AND WS.CaseArtifactID = PS.CaseArtifactID
				LEFT JOIN EDDS.eddsdbo.CaseStatistics CS
					ON DATEADD(MI, @TimeZoneOffset, DATEADD(HOUR, DATEPART(HOUR,MeasureDate), CONVERT(varchar(10), MeasureDate ,101))) = DATEADD(HOUR, DATEPART(HOUR,dr.DateRange), CONVERT(varchar(10), dr.DateRange,101))				    			  
						AND WS.CaseArtifactID = CS.CaseArtifactID
				LEFT JOIN (
					SELECT
						LDW.CaseArtifactID AS CaseArtifactID,
						SUM(LDW.NRLRQCount) AS NRLRQCount,
						SUM(LDW.TotalQCount) AS TotalQCount
					FROM
						eddsdbo.LRQCountDW LDW
					WHERE
						DATEADD(MI, @TimeZoneOffset, DATEADD(HOUR,LDW.MeasureHour, cast(LDW.MeasureDate as datetime))) BETWEEN
						@StartDate AND @EndDate + 1
					GROUP BY
						LDW.CaseArtifactID
				) BIS 
					ON WS.CaseArtifactID = BIS.CaseArtifactID 						
		END
	ELSE		BEGIN	
			SELECT
				ROW_NUMBER() OVER(ORDER BY WS.CaseArtifactID, DateRange) AS Id								
				, WS.CaseArtifactID as CaseArtifactID
				, WS.WorkspaceName as WorkspaceName						
				, ISNULL(WS.[DatabaseLocation],'') as [DatabaseLocation]
				, dr.DateRange as MeasureDate
				, ISNULL(PS.UserCount, -1) AS UserCount
				, ISNULL(PS.ErrorCount, -1) AS ErrorCount
				, ISNULL(PS.LRQCount, -1) AS LRQCount
				, ISNULL(PS.AverageLatency,-1) AS AverageLatency
				, ISNULL(
					Convert(int, 
						Convert(nvarchar(max),					
							DecryptByPassPhrase(@pwd, 
								CONVERT(nvarchar(max),BIS.StatusDay), 
								1, 
								CONVERT( varbinary, BIS.MeasureDate)
							)
						)
					)				
				,0) AS BISIndicator
				, ISNULL(BIS.TQCount,0) AS TQCount
			FROM [eddsdbo].GetDateRange(@StartDate, @EndDate) dr
				CROSS JOIN 
				(
					SELECT DISTINCT 
						w.CaseArtifactID
						, w.WorkspaceName
						, w.[DatabaseLocation]
					FROM eddsdbo.EDDSWorkspace w				
						JOIN eddsdbo.PerformanceSummary PS on PS.CaseArtifactID = w.CaseArtifactID 
							AND DATEADD(MI, @TimeZoneOffset, MeasureDate) >= @StartDate 
							AND DATEADD(MI, @TimeZoneOffset, MeasureDate) < (@EndDate + 1)
				) as WS
				LEFT JOIN 
				(
					SELECT 
						PS.CaseArtifactID
						, DATEADD(DD, 0, DATEDIFF(DD, 0, DATEADD(MI, @TimeZoneOffset, MeasureDate))) [MeasureDate]
						, AVG(PS.UserCount) AS UserCount
						, SUM(PS.ErrorCount) AS ErrorCount
						, SUM(PS.LRQCount) AS LRQCount
						, AVG(PS.AverageLatency)  AS AverageLatency
					FROM eddsdbo.PerformanceSummary PS
					WHERE DATEADD(MI, @TimeZoneOffset,MeasureDate) >=  @StartDate 
						AND DATEADD(MI, @TimeZoneOffset,MeasureDate) < (@EndDate + 1)
					GROUP BY PS.CaseArtifactID
						, DATEADD(DD, 0, DATEDIFF(DD, 0, DATEADD(MI, @TimeZoneOffset, MeasureDate)))
				) as PS on PS.MeasureDate = dr.DateRange 
					AND WS.CaseArtifactID = PS.CaseArtifactID
				LEFT JOIN	
				eddsdbo.BISSummary BIS ON BIS.MeasureDate = DATEADD(DD, 0, dr.DateRange) AND WS.CaseArtifactID = BIS.CaseArtifactID 
		END	
END

GO

PRINT N'Done!'
GO
