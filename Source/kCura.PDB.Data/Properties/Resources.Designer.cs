//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace kCura.PDB.Data.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("kCura.PDB.Data.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(aa.[ArtifactID])
        ///FROM [EDDS].[eddsdbo].[Agent] as aa WITH(NOLOCK)
        ///inner join [EDDS].[eddsdbo].[AgentType] as att on aa.AgentTypeArtifactID = att.ArtifactID
        ///WHERE att.[Guid] in @agentGuids
        ///AND (aa.[Enabled] = 1 and aa.[Updated] = 0)
        ///
        ///
        ///--declare @unPausedAgents int = 0
        ///--declare @enabledAgents int = 0
        ///--
        ///--
        ///--insert into EDDSPerformance.eddsdbo.[PausedAgents]
        ///--(AgentName, ShouldPause, IsPaused, PausedOn)
        ///--select Name, 1, 0, GETUTCDATE() from [EDDS].[eddsdbo].[Agent] WITH(NOLOCK)
        ///- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Agent_CheckForAgentsEnabled {
            get {
                return ResourceManager.GetString("Agent_CheckForAgentsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(a.ArtifactID)
        ///FROM [EDDS].[eddsdbo].[Agent] as a WITH(NOLOCK)
        ///inner join [EDDS].[eddsdbo].[AgentType] as at on a.AgentTypeArtifactID = at.ArtifactID
        ///WHERE at.[Guid] in @oldAgentGuid.
        /// </summary>
        internal static string Agent_CheckLegacyAgentsExist {
            get {
                return ResourceManager.GetString("Agent_CheckLegacyAgentsExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP (1) 1
        ///  FROM [EDDS].[eddsdbo].[Agent] a with(nolock)
        ///  inner join [edds].eddsdbo.AgentType at with(nolock) on a.AgentTypeArtifactID = at.ArtifactID
        ///  where at.[Guid] = @agentTypeGuid.
        /// </summary>
        internal static string Agent_CheckWithTypeExists {
            get {
                return ResourceManager.GetString("Agent_CheckWithTypeExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDS]
        ///
        ///SELECT [Enabled]
        ///FROM [eddsdbo].[Agent] with(nolock)
        ///WHERE [ArtifactID] = @agentId.
        /// </summary>
        internal static string Agent_Enabled {
            get {
                return ResourceManager.GetString("Agent_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDS]
        ///
        ///SELECT aa.[ArtifactID]
        ///FROM [EDDS].[eddsdbo].[Agent] as aa WITH(NOLOCK)
        ///inner join [EDDS].[eddsdbo].[AgentType] as att on aa.AgentTypeArtifactID = att.ArtifactID
        ///WHERE att.[Guid] in @agentGuids.
        /// </summary>
        internal static string Agent_ReadAll {
            get {
                return ResourceManager.GetString("Agent_ReadAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDS]
        ///
        ///SELECT aa.[ArtifactID]
        ///FROM [EDDS].[eddsdbo].[Agent] as aa WITH(NOLOCK)
        ///inner join [EDDS].[eddsdbo].[AgentType] as att on aa.AgentTypeArtifactID = att.ArtifactID
        ///WHERE att.[Guid] in @agentGuids
        ///AND (aa.[Enabled] = 1 and aa.[Updated] = 0).
        /// </summary>
        internal static string Agent_ReadAllEnabled {
            get {
                return ResourceManager.GetString("Agent_ReadAllEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[AgentHistory]
        ///           ([AgentArtifactId]
        ///           ,[TimeStamp]
        ///           ,[Successful])
        ///     VALUES
        ///           (@agentArtifactId,
        ///           @timeStamp,
        ///           @successful)
        ///
        ///SELECT * FROM [eddsdbo].[AgentHistory] WHERE ID = @@IDENTITY.
        /// </summary>
        internal static string AgentHistory_Create {
            get {
                return ResourceManager.GetString("AgentHistory_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM [eddsdbo].[AgentHistory]
        ///      WHERE ID = @id.
        /// </summary>
        internal static string AgentHistory_Delete {
            get {
                return ResourceManager.GetString("AgentHistory_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///FROM [eddsdbo].[AgentHistory] as ah with(nolock)
        ///inner join eddsdbo.[Hours] as h with(nolock) on h.ID = @hourId
        ///WHERE ah.[TimeStamp] &gt; h.HourTimeStamp and ah.TimeStamp &lt; dateadd(HOUR, 1,  h.HourTimeStamp) and h.Status != 4.
        /// </summary>
        internal static string AgentHistory_ReadByHour {
            get {
                return ResourceManager.GetString("AgentHistory_ReadByHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///  FROM [eddsdbo].[AgentHistory] with(nolock)
        ///  WHERE ID = @id.
        /// </summary>
        internal static string AgentHistory_ReadByID {
            get {
                return ResourceManager.GetString("AgentHistory_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT top(1) *
        ///  FROM [eddsdbo].[AgentHistory] with(nolock)
        ///  order by [TimeStamp]
        ///  .
        /// </summary>
        internal static string AgentHistory_ReadEarliest {
            get {
                return ResourceManager.GetString("AgentHistory_ReadEarliest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[AgentHistory]
        ///   SET [AgentArtifactId] = @agentArtifactId,
        ///	   [TimeStamp] = @timeStamp,
        ///       [Successful] = @successful
        /// WHERE ID = @id.
        /// </summary>
        internal static string AgentHistory_Update {
            get {
                return ResourceManager.GetString("AgentHistory_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance;
        ///
        ///SET IDENTITY_INSERT [eddsdbo].[ServerType] ON
        ///IF NOT EXISTS(SELECT * from [eddsdbo].[ServerType] WHERE ServerTypeID=11)
        ///INSERT INTO [eddsdbo].[ServerType] ([ServerTypeID], [ServerTypeName], [ArtifactID]) VALUES (11, N&apos;WebAPI&apos;, NULL)
        ///IF NOT EXISTS(SELECT * from [eddsdbo].[ServerType] WHERE ServerTypeID=12)
        ///INSERT INTO [eddsdbo].[ServerType] ([ServerTypeID], [ServerTypeName], [ArtifactID]) VALUES (12, N&apos;Services&apos;, NULL)
        ///IF NOT EXISTS(SELECT * from [eddsdbo].[ServerType] WHERE ServerTypeI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApplyManualUpgrades {
            get {
                return ResourceManager.GetString("ApplyManualUpgrades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to insert into [eddsdbo].[Artifact] 
        ///	([ArtifactTypeID],
        ///	[ParentArtifactID],
        ///	[AccessControlListID],
        ///	[AccessControlListIsInherited],
        ///	[CreatedBy],
        ///	[LastModifiedBy],
        ///	[CreatedOn],
        ///	[LastModifiedOn],
        ///	[TextIdentifier],
        ///	[ContainerID],
        ///	[Keywords],
        ///	[Notes],
        ///	[DeleteFlag]) 
        ///values
        ///	(@artifactTypeId, -- ArtifactTypeID
        ///	@parentArtifactID, -- ParentArtifactID
        ///	1, -- AccessControlListID
        ///	1, -- AccessControlListIsInherited
        ///	@createdBy, -- CreatedBy
        ///	@createdBy, -- LastModifiedBy
        ///	GETDATE(), -- CreatedOn
        ///	GETDATE(), [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Artifact_Create {
            get {
                return ResourceManager.GetString("Artifact_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM edds.eddsdbo.artifact
        ///WHERE ArtifactId in @artifactIds.
        /// </summary>
        internal static string Artifact_DeleteAll {
            get {
                return ResourceManager.GetString("Artifact_DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a.ArtifactID
        ///from eddsdbo.artifact a with(nolock)
        ///inner join eddsdbo.artifactGuid ag with(nolock) on ag.ArtifactID = a.ArtifactID
        ///where ag.ArtifactGuid = @artifactGuid.
        /// </summary>
        internal static string Artifact_ReadByGuid {
            get {
                return ResourceManager.GetString("Artifact_ReadByGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP(1) 1
        ///FROM [eddsdbo].[Artifact] WITH ( NOLOCK ).
        /// </summary>
        internal static string Artifact_TestDatabaseAccess {
            get {
                return ResourceManager.GetString("Artifact_TestDatabaseAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [eddsdbo].ArtifactAncestry
        ///	(AncestorArtifactID, ArtifactID)
        ///VALUES
        ///	(@parentArtifactId, @artifactId)
        ///	
        ///INSERT INTO [eddsdbo].ArtifactAncestry
        ///	(AncestorArtifactID, ArtifactID) 
        ///SELECT AncestorArtifactID, @artifactId
        ///FROM [eddsdbo].ArtifactAncestry
        ///WHERE ArtifactID = @parentArtifactId.
        /// </summary>
        internal static string ArtifactAncestry_Create {
            get {
                return ResourceManager.GetString("ArtifactAncestry_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM EDDS.eddsdbo.ArtifactAncestry
        ///WHERE ArtifactID in @artifactIds.
        /// </summary>
        internal static string ArtifactAncestry_DeleteAll {
            get {
                return ResourceManager.GetString("ArtifactAncestry_DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ArtifactID FROM EDDS.eddsdbo.ArtifactAncestry with(nolock)
        ///WHERE AncestorArtifactID = @artifactId.
        /// </summary>
        internal static string ArtifactAncestry_ReadByParent {
            get {
                return ResourceManager.GetString("ArtifactAncestry_ReadByParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[MetricData_AuditAnalysis]
        ///			([MetricDataId]
        ///			,[UserId]
        ///			,[TotalComplexQueries]
        ///			,[TotalLongRunningQueries]
        ///			,[TotalSimpleLongRunningQueries]
        ///			,[TotalQueries]
        ///			,[TotalExecutionTime])
        ///		VALUES
        ///			(@metricDataId
        ///			,@userId
        ///			,@totalComplexQueries
        ///			,@totalLongRunningQueries
        ///			,@totalSimpleLongRunningQueries
        ///			,@totalQueries
        ///			,@totalExecutionTime).
        /// </summary>
        internal static string AuditAnalysis_Create {
            get {
                return ResourceManager.GetString("AuditAnalysis_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select * from eddsdbo.MetricData_AuditAnalysis as aa with(nolock)
        ///where aa.MetricDataId = @metricDataId.
        /// </summary>
        internal static string AuditAnalysis_ReadByMetricData {
            get {
                return ResourceManager.GetString("AuditAnalysis_ReadByMetricData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) *
        ///from [eddsdbo].[MetricData_AuditAnalysis] with(nolock)
        ///where [MetricDataId] = @metricDataId and [UserId] = @userId.
        /// </summary>
        internal static string AuditAnalysis_ReadByMetricDataAndUser {
            get {
                return ResourceManager.GetString("AuditAnalysis_ReadByMetricDataAndUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT SERVERPROPERTY (&apos;IsHadrEnabled&apos;);.
        /// </summary>
        internal static string AvailabilityGroup_Aoag_Enabled {
            get {
                return ResourceManager.GetString("AvailabilityGroup_Aoag_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [master]
        ///
        ///IF EXISTS (SELECT * FROM sys.databases WHERE name = &apos;{0}&apos;)
        ///BEGIN
        ///	declare @sql nvarchar(max) = N&apos;
        ///	use [{0}]
        ///	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;&apos;[eddsdbo].[RemoveDatabaseFromAvailabilityGroup]&apos;&apos;) AND type in (N&apos;&apos;P&apos;&apos;, N&apos;&apos;PC&apos;&apos;))
        ///		and EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;&apos;[eddsdbo].[ReadAvailabilityGroupName]&apos;&apos;) AND type in (N&apos;&apos;P&apos;&apos;, N&apos;&apos;PC&apos;&apos;))
        ///		and EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;&apos;[eddsdbo].[DatabaseJoine [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AvailabilityGroup_SprocsExist {
            get {
                return ResourceManager.GetString("AvailabilityGroup_SprocsExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Awaiting Analysis: Batch jobs have been created and are currently gathering audit data
        ///
        ///select isnull(sum(c), 0)
        ///from (
        ///	select 
        ///		1 c
        ///	from eddsdbo.[Hours] as h WITH(NOLOCK)
        ///		left outer join eddsdbo.HourSearchAuditBatches as hb WITH(NOLOCK) on h.id = hb.HourId
        ///		left outer join eddsdbo.SearchAuditBatch sab on hb.id = sab.hoursearchauditbatchid and sab.Completed = 0
        ///		where h.HourTimeStamp &gt;= DATEADD(DAY, @backFillHours, getutcdate()) and h.Status != 4 and h.Score is null
        ///		and (hb.BatchesCreated &gt; 0 or [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Backfill_ReadHoursAwaitingAnalysis {
            get {
                return ResourceManager.GetString("Backfill_ReadHoursAwaitingAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Awaiting Discovery: hours have not been created for the timerange yet
        ///
        ///DECLARE @nowDate DATETIME = getutcdate()
        ///DECLARE @startDate DATETIME = DATEADD(dd, @backFillHours, @nowDate)
        ///DECLARE @hoursInRange int = DATEDIFF(hour, @startDate, @nowDate)
        ///
        ///-- If they exist in the Hours table, we&apos;re looking at them.
        ///SELECT @hoursInRange - COUNT(*) FROM eddsdbo.[Hours] h WITH(NOLOCK) WHERE h.HourTimeStamp &gt;= @startDate and h.Status != 4.
        /// </summary>
        internal static string Backfill_ReadHoursAwaitingDiscovery {
            get {
                return ResourceManager.GetString("Backfill_ReadHoursAwaitingDiscovery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Awaiting scoring: Data has been collected, waiting for metric system to run and calculate the category score for UX
        ///
        ///select isnull(sum(c), 0)
        ///from (
        ///	select 
        ///		1 c
        ///	from eddsdbo.[Hours] as h WITH(NOLOCK)
        ///		left outer join eddsdbo.HourSearchAuditBatches as hb WITH(NOLOCK) on h.id = hb.HourId
        ///		left outer join eddsdbo.SearchAuditBatch sab on hb.id = sab.hoursearchauditbatchid and sab.Completed = 1
        ///		where h.HourTimeStamp &gt;= DATEADD(DAY, @backFillHours, getutcdate()) and h.Status != 4 and h.Score is null
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Backfill_ReadHoursAwaitingScoring {
            get {
                return ResourceManager.GetString("Backfill_ReadHoursAwaitingScoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select Count(Distinct SummaryDayHour) as HoursCompletedScoring
        ///FROM eddsdbo.QoS_Ratings qr WITH(NOLOCK)
        ///	WHERE qr.SummaryDayHour &gt;= DATEADD(dd, @backFillHours, getutcdate()).
        /// </summary>
        internal static string Backfill_ReadHoursCompletedScoring {
            get {
                return ResourceManager.GetString("Backfill_ReadHoursCompletedScoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	database_name as [DatabaseName],
        ///	backup_start_date as [Start],
        ///	backup_finish_date as [End],
        ///	[type] as [BackupType]
        ///FROM msdb.dbo.backupset bs WITH(NOLOCK)
        ///WHERE backup_finish_date &gt;= @hourStartDate
        ///	AND backup_finish_date &lt; @hourEndDate
        ///	AND database_name in @databaseNames.
        /// </summary>
        internal static string Backup_ReadBackups {
            get {
                return ResourceManager.GetString("Backup_ReadBackups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @hourEndDate90DayWindow datetime = dateadd(day, -90, @hourEndDate)
        ///
        ///;WITH LastDatabaseBackups (database_name, backup_finish_date, backup_start_date, [type], rowid)	AS
        ///	(
        ///		SELECT database_name, backup_finish_date, backup_start_date, [type]
        ///			, ROW_NUMBER() OVER(PARTITION BY database_name ORDER BY backup_finish_date DESC) AS rowid 
        ///		FROM msdb.dbo.backupset bh WITH(NOLOCK)
        ///		WHERE backup_finish_date &lt; @hourEndDate
        ///			and backup_finish_date &gt;= @hourEndDate90DayWindow
        ///			AND database_name in @database [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Backup_ReadBackupsBeforeHour {
            get {
                return ResourceManager.GetString("Backup_ReadBackupsBeforeHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///DELETE FROM eddsdbo.QoS_BackResults WHERE LoggedDate in @summaryDayHour
        ///DELETE FROM eddsdbo.QoS_DBCCResults WHERE LoggedDate in @summaryDayHour
        ///DELETE FROM eddsdbo.QoS_RecoverabilityIntegritySummary WHERE SummaryDayHour in @summaryDayHour.
        /// </summary>
        internal static string BackupDbccReportData_Clear {
            get {
                return ResourceManager.GetString("BackupDbccReportData_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.QoS_BackupHistory
        ///
        ///-- Clear last backup time
        ///UPDATE eddsdbo.[Server]
        ///SET LastServerBackup = NULL
        ///WHERE ServerTypeID = 3.
        /// </summary>
        internal static string BackupHistory_Clear {
            get {
                return ResourceManager.GetString("BackupHistory_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_BackResults]&apos;) AND type in (N&apos;U&apos;))
        ///BEGIN
        ///	SELECT [DBName]
        ///		  ,[DaysSinceLast]
        ///	FROM [eddsdbo].[QoS_BackResults]
        ///	WHERE LoggedDate = (SELECT MAX(LoggedDate) FROM [eddsdbo].[QoS_BackResults])
        ///	AND DaysSinceLast &gt;= 7
        ///END.
        /// </summary>
        internal static string BackupsNearingViolation {
            get {
                return ResourceManager.GetString("BackupsNearingViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @hourEndDate90DayWindow datetime = dateadd(day, -90, @hourEndDate)
        ///
        ///;WITH LastDatabaseBackups ([Database], BackupEndDate, BackupStartDate, [BackupType], rowid)	AS
        ///	(
        ///		SELECT [Database], BackupEndDate, BackupStartDate, [BackupType]
        ///			, ROW_NUMBER() OVER(PARTITION BY [Database] ORDER BY BackupEndDate DESC) AS rowid 
        ///		FROM eddsdbo.MockBackupSet bh WITH(NOLOCK)
        ///		WHERE BackupEndDate &lt; @hourEndDate
        ///			and BackupEndDate &gt;= @hourEndDate90DayWindow
        ///			AND [Database] in @databaseNames
        ///			AND [BackupType]  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BackupTest_ReadFirstBeforeHour {
            get {
                return ResourceManager.GetString("BackupTest_ReadFirstBeforeHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///SELECT
        ///	[Database] as [DatabaseName],
        ///	BackupStartDate as [Start],
        ///	BackupEndDate as [End],
        ///	[BackupType]
        ///FROM eddsdbo.MockBackupSet bs WITH(NOLOCK)
        ///WHERE [Server] = @ServerName
        ///	AND BackupEndDate &gt;= @hourStartDate
        ///	AND BackupEndDate &lt; @hourEndDate
        ///	AND [Database] in @databaseNames.
        /// </summary>
        internal static string BackupTest_ReadForHour {
            get {
                return ResourceManager.GetString("BackupTest_ReadForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[Categories]
        ///			([CategoryTypeID]
        ///			,[HourID])
        ///		VALUES
        ///			(@categoryTypeID
        ///			,@hourID).
        /// </summary>
        internal static string Category_CreateInsert {
            get {
                return ResourceManager.GetString("Category_CreateInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT * FROM [eddsdbo].[Categories] with(nolock)
        ///	where [CategoryTypeID] = @categoryTypeID and [HourID] = @hourID.
        /// </summary>
        internal static string Category_CreateRead {
            get {
                return ResourceManager.GetString("Category_CreateRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Delete from [eddsdbo].[Categories]
        ///where ID = @Id.
        /// </summary>
        internal static string Category_Delete {
            get {
                return ResourceManager.GetString("Category_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) c.*
        ///from eddsdbo.Categories c with(nolock)
        ///inner join eddsdbo.CategoryScores cs with(nolock) on c.ID = cs.CategoryID
        ///where cs.ID = @categoryScoreId
        ///.
        /// </summary>
        internal static string Category_ReadByCategoryScore {
            get {
                return ResourceManager.GetString("Category_ReadByCategoryScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select * from [eddsdbo].[Categories] with(nolock)
        ///where ID = @Id
        ///.
        /// </summary>
        internal static string Category_ReadByID {
            get {
                return ResourceManager.GetString("Category_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Categories]
        ///   SET [CategoryTypeID] = @categoryTypeID
        ///      ,[HourID] = @hourID
        /// WHERE ID = @Id.
        /// </summary>
        internal static string Category_Update {
            get {
                return ResourceManager.GetString("Category_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///IF NOT EXISTS(select top(1) id from [eddsdbo].[CategoryScores] (UPDLOCK) where [CategoryID] = @categoryID and ([ServerID] = @serverID OR ([ServerID] is null and @serverID is null)))
        ///BEGIN
        ///	INSERT INTO [eddsdbo].[CategoryScores]
        ///			([CategoryID]
        ///			,[ServerID]
        ///			,[Score])
        ///		VALUES
        ///			(@categoryID
        ///			,@serverID
        ///			,@score)
        ///			
        ///	SELECT * FROM [eddsdbo].[CategoryScores] WHERE ID = @@IDENTITY
        ///END
        ///ELSE
        ///BEGIN
        ///	SELECT * FROM [eddsdbo].[CategoryScores]
        ///	where [CategoryID] = @categoryID and ([ServerID] = @serverID [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CategoryScore_Create {
            get {
                return ResourceManager.GetString("CategoryScore_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM [eddsdbo].[CategoryScores]
        ///      WHERE ID = @id.
        /// </summary>
        internal static string CategoryScore_Delete {
            get {
                return ResourceManager.GetString("CategoryScore_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- use [EDDSPerformance];
        ///select cs.* from eddsdbo.CategoryScores as cs with(nolock)
        ///where cs.CategoryID = @categoryId.
        /// </summary>
        internal static string CategoryScore_ReadByCategory {
            get {
                return ResourceManager.GetString("CategoryScore_ReadByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) *
        ///from [eddsdbo].[CategoryScores] with(nolock)
        ///where
        ///	[CategoryID] = @categoryID
        ///	and ([ServerID] = @serverID OR ([ServerID] is null and @serverID is null)).
        /// </summary>
        internal static string CategoryScore_ReadByCategoryAndServer {
            get {
                return ResourceManager.GetString("CategoryScore_ReadByCategoryAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select cs.* from eddsdbo.CategoryScores as cs with(nolock)
        ///inner join eddsdbo.Categories as c with(nolock) on c.ID = cs.CategoryID
        ///where c.HourID = @hourId
        ///.
        /// </summary>
        internal static string CategoryScore_ReadByHour {
            get {
                return ResourceManager.GetString("CategoryScore_ReadByHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT * 
        ///	FROM [eddsdbo].[CategoryScores] with(nolock)
        ///	WHERE ID = @id.
        /// </summary>
        internal static string CategoryScore_ReadByID {
            get {
                return ResourceManager.GetString("CategoryScore_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[CategoryScores]
        ///   SET [CategoryID] = @categoryID,
        ///       [ServerID] = @serverID,
        ///       [Score] = @score
        /// WHERE ID = @id.
        /// </summary>
        internal static string CategoryScore_Update {
            get {
                return ResourceManager.GetString("CategoryScore_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///DECLARE @expectedVersion nvarchar(max) = (SELECT TOP 1 Value FROM [eddsdbo].[Configuration] WHERE Section = &apos;kCura.PDB&apos; AND Name = &apos;AdminScriptsVersion&apos;)
        ///
        ///select case when count(*) = 0 then 1 else 0 end as AllServersDeployed
        ///from eddsdbo.[Server] as s
        ///where
        ///(DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0))
        ///and ServerTypeID = 3
        ///and (s.AdminScriptsVersion &lt;&gt; @expectedVersion or s.AdminScriptsVersion is null).
        /// </summary>
        internal static string CheckAdminScriptsInstalled {
            get {
                return ResourceManager.GetString("CheckAdminScriptsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///IF NOT EXISTS(SELECT TOP 1 QRatingID FROM eddsdbo.QoS_Ratings WITH(NOLOCK))
        ///	SELECT CAST(0 as bit);
        ///ELSE
        ///	SELECT CAST(1 as bit);.
        /// </summary>
        internal static string CheckLookingGlassHistory {
            get {
                return ResourceManager.GetString("CheckLookingGlassHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select ArtifactID, Name from eddsdbo.Code c
        ///where c.CodeTypeID = @choiceTypeId.
        /// </summary>
        internal static string Choice_ReadByChoiceTypeId {
            get {
                return ResourceManager.GetString("Choice_ReadByChoiceTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @GlassAgent nvarchar(max)
        ///BEGIN TRY
        ///SET @GlassAgent =
        ///	(SELECT C.[Value]
        ///	FROM [EDDSPerformance].[eddsdbo].[Configuration] C
        ///	JOIN [EDDS].[eddsdbo].[Agent] A WITH(NOLOCK)
        ///	ON C.Value = A.ArtifactID
        ///	WHERE C.Section=&apos;kCura.PDB&apos;
        ///	AND C.Name=&apos;LookingGlassAgent&apos;
        ///	AND A.MessageTime &gt; DATEADD(hh, -1, getutcdate()))
        ///IF (@GlassAgent is NULL) BEGIN
        ///	SET @GlassAgent = @AgentID
        ///	UPDATE [EDDSPerformance].[eddsdbo].[Configuration]
        ///		SET Value = @GlassAgent
        ///		WHERE Section = &apos;kCura.PDB&apos; AND Name = &apos;LookingGlassAg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClaimLookingGlass {
            get {
                return ResourceManager.GetString("ClaimLookingGlass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @RollupAgent nvarchar(max)
        ///BEGIN TRY
        ///SET @RollupAgent =
        ///	(SELECT C.[Value]
        ///	FROM [EDDSPerformance].[eddsdbo].[Configuration] C
        ///	JOIN [EDDS].[eddsdbo].[Agent] A WITH(NOLOCK)
        ///	ON C.Value = A.ArtifactID
        ///	WHERE C.Section=&apos;kCura.PDB&apos;
        ///	AND C.Name=&apos;RollupAgent&apos;
        ///	AND A.MessageTime &gt; DATEADD(hh, -1, getutcdate()))
        ///IF (@RollupAgent is NULL) BEGIN
        ///	SET @RollupAgent = @AgentID
        ///	UPDATE [EDDSPerformance].[eddsdbo].[Configuration]
        ///		SET Value = @RollupAgent
        ///		WHERE Section = &apos;kCura.PDB&apos; AND Name = &apos;RollupAgent&apos;
        ///EN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClaimRollup {
            get {
                return ResourceManager.GetString("ClaimRollup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///	@ServerAgent nvarchar(max) = @AgentID,
        ///	@LastChecked datetime = &apos;&apos;,
        ///	@persistAgentClaims bit = ISNULL((
        ///		SELECT TOP 1
        ///			CASE WHEN [Value] = &apos;True&apos; THEN 1
        ///				ELSE 0
        ///			END
        ///		FROM EDDSPerformance.eddsdbo.Configuration
        ///		WHERE Section = &apos;kCura.PDB&apos;
        ///			AND Name = &apos;PersistResponsibleAgents&apos;
        ///	), 0);
        ///
        ////*
        ///Determine whether another agent has already claimed this server and when it was last checked.
        ///If another agent has claimed this server, but hasn&apos;t unclaimed it in an hour, it&apos;s fair game [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClaimServer {
            get {
                return ResourceManager.GetString("ClaimServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDS
        ///
        ///DECLARE @applicationGuid UNIQUEIDENTIFIER = &apos;60a1d0a3-2797-4fb3-a260-614cbfd3fa0d&apos;
        ///
        ///--Gather all old Trust Agent Resource Files
        ///DECLARE @agentResourcefilesIds table(ArtifactId int);
        ///INSERT @agentResourcefilesIds(ArtifactId) 
        ///SELECT rf.ArtifactId 
        ///FROM eddsdbo.ResourceFile as rf
        ///inner join EDDS.eddsdbo.AssemblyAgentType as aat on rf.ArtifactID = aat.AssemblyArtifactID
        ///inner join EDDS.eddsdbo.AgentType as at on aat.AgentTypeID = at.ArtifactID
        ///WHERE at.[Guid] in @oldAgentGuid
        ///
        ///DECLARE @agentTypeIds t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CleanupAndDeleteOldAgent {
            get {
                return ResourceManager.GetString("CleanupAndDeleteOldAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --EDDSPerformance
        ///WHILE EXISTS (SELECT TOP 1 1 FROM eddsdbo.ErrorCountDW WHERE MeasureDate &lt; @cutoff)
        ///BEGIN
        ///	DELETE TOP (50000) FROM eddsdbo.ErrorCountDW WHERE MeasureDate &lt; @cutoff;
        ///END
        ///
        ///WHILE EXISTS (SELECT TOP 1 1 FROM eddsdbo.PerformanceSummary WHERE MeasureDate &lt; @cutoff)
        ///BEGIN
        ///	DELETE TOP (50000) FROM eddsdbo.PerformanceSummary WHERE MeasureDate &lt; @cutoff;
        ///END
        ///
        ///WHILE EXISTS (SELECT TOP 1 1 FROM eddsdbo.ServerDiskDW WHERE CreatedOn &lt; @cutoff)
        ///BEGIN
        ///	DELETE TOP (50000) FROM eddsdbo.ServerDiskDW WHERE Cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CleanupDataTables {
            get {
                return ResourceManager.GetString("CleanupDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --Expected variables
        ///--DECLARE @batchSize int = 10000
        ///--DECLARE @threshold datetime = &apos;2015-08-02 21:00:00.000&apos;
        ///--DECLARE @maxdopLimit bit = 0
        ///
        ///DECLARE @maxdopOption nvarchar(20)
        ///SET @maxdopOption = CASE WHEN @maxdopLimit = 0 THEN &apos;&apos; ELSE &apos;OPTION (MAXDOP 2)&apos; END
        ///
        ///DECLARE @SQL nvarchar(max)
        ///SET @SQL = &apos;WHILE EXISTS (SELECT TOP 1 1 FROM eddsdbo.QoS_CasesToAudit AS ca WHERE ca.ServerID NOT IN (SELECT s.ArtifactID FROM eddsdbo.[Server] AS s WHERE s.DeletedOn IS NULL AND ISNULL(s.IgnoreServer, 0) = 0 AND s.Serve [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CleanupTables_CasesToAuditDecommission {
            get {
                return ResourceManager.GetString("CleanupTables_CasesToAuditDecommission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --Expected variables
        ///--DECLARE @batchSize int = 10000
        ///--DECLARE @threshold datetime = &apos;2015-08-02 21:00:00.000&apos;
        ///--DECLARE @tableScope nvarchar(120) = &apos;EDDSDBO.QoS_GlassRunLog&apos;
        ///--DECLARE @dateTimeColumn nvarchar(64) = &apos;LogTimestampUTC&apos;
        ///--DECLARE @maxdopLimit bit = 0
        ///
        ///DECLARE @maxdopOption nvarchar(20)
        ///SET @maxdopOption = CASE WHEN @maxdopLimit = 0 THEN &apos;&apos; ELSE &apos;OPTION (MAXDOP 2)&apos; END
        ///
        ///DECLARE @SQL nvarchar(max)
        ///SET @SQL = &apos;WHILE EXISTS (SELECT TOP 1 1 FROM &apos; 
        ///	+ @tableScope + &apos; WHERE &apos; + @dateTimeColumn + &apos;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CleanupTables_DateTimeDynamicDelete {
            get {
                return ResourceManager.GetString("CleanupTables_DateTimeDynamicDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --Expected variables
        ///--DECLARE @batchSize int = 10000
        ///--DECLARE @threshold datetime = &apos;2015-08-02 21:00:00.000&apos;
        ///--DECLARE @tableScope nvarchar(120) = &apos;EDDSDBO.QoS_GlassRunLog&apos;
        ///--DECLARE @dateTimeColumn nvarchar(64) = &apos;LogTimestampUTC&apos;
        ///--DECLARE @maxdopLimit bit = 0
        ///
        ///DECLARE @maxdopOption nvarchar(20)
        ///SET @maxdopOption = CASE WHEN @maxdopLimit = 0 THEN &apos;&apos; ELSE &apos;OPTION (MAXDOP 2)&apos; END
        ///
        ///
        ///
        ///--- Delete from EventLogs
        ///--- Delete from QoS_GlassRunLog
        ///
        ///DECLARE @SQL nvarchar(max)
        ///-- While exists
        ///SET @SQL = &apos;DECLARE @ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CleanupTables_QosGlassRunLog {
            get {
                return ResourceManager.GetString("CleanupTables_QosGlassRunLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --Expected variables
        ///--DECLARE @batchSize int = 10000
        ///--DECLARE @threshold bigint = &apos;123456&apos;
        ///--DECLARE @tableScope nvarchar(120) = &apos;EDDSDBO.QoS_GlassRunLog&apos;
        ///--DECLARE @maxdopLimit bit = 0
        ///
        ///DECLARE @maxdopOption nvarchar(20)
        ///SET @maxdopOption = CASE WHEN @maxdopLimit = 0 THEN &apos;&apos; ELSE &apos;OPTION (MAXDOP 2)&apos; END
        ///
        ///DECLARE @SQL nvarchar(max)
        ///SET @SQL = &apos;WHILE EXISTS (SELECT TOP 1 1 FROM &apos; 
        ///	+ @tableScope + &apos; WHERE QoSHourID &lt; &apos;&apos;&apos; + CAST(@threshold AS NVARCHAR) 
        ///	+ &apos;&apos;&apos;) BEGIN BEGIN TRY DELETE TOP (&apos; + CAST(@batchSiz [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CleanupTables_QosHourIdDynamicDelete {
            get {
                return ResourceManager.GetString("CleanupTables_QosHourIdDynamicDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///DECLARE @summaryDayHour DATETIME = DATEADD(hh, DATEDIFF(hh, 0, getutcdate()) - 1, 0);
        ///DECLARE @end DATETIME = DATEADD(hh, DATEDIFF(hh, 0, getdate()), 0);
        ///DECLARE @start DATETIME = DATEADD(hh, -1, @end),
        ///	@searchTerm NVARCHAR(MAX) = N&apos;A significant part of SQL server process memory has been paged out&apos;,
        ///	@serverId INT,
        ///	@maxServerId INT,
        ///	@serverName NVARCHAR(MAX),
        ///	@SQL NVARCHAR(MAX),
        ///	@parameterDefinition NVARCHAR(MAX) = N&apos;@start DATETIME, @end DATETIME, @searchTerm NVARCHAR(MAX), @serv [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CollectPageoutInformation {
            get {
                return ResourceManager.GetString("CollectPageoutInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [Section], [Name], [Value], [MachineName]
        ///FROM [eddsdbo].[Configuration] with(nolock).
        /// </summary>
        internal static string Config_ReadInfo {
            get {
                return ResourceManager.GetString("Config_ReadInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [Section], [Name], [Value], [MachineName]
        ///FROM [eddsdbo].[Configuration] with(nolock)
        ///WHERE [Section] = @section AND [Name] = @name.
        /// </summary>
        internal static string Config_ReadInfoBySectionAndName {
            get {
                return ResourceManager.GetString("Config_ReadInfoBySectionAndName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 [Value] 
        ///FROM [eddsdbo].[Configuration] with(nolock)
        ///WHERE [Section] = @section AND [Name] = @name.
        /// </summary>
        internal static string Config_ReadValueBySectionAndName {
            get {
                return ResourceManager.GetString("Config_ReadValueBySectionAndName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO EDDSDBO.Configuration
        ///VALUES(@section,@name,@value,&apos;&apos;,&apos;&apos;).
        /// </summary>
        internal static string Config_SetConfigValueInsert {
            get {
                return ResourceManager.GetString("Config_SetConfigValueInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE EDDSDBO.Configuration
        ///SET Value = @value
        ///WHERE Section = @section AND Name = @name;.
        /// </summary>
        internal static string Config_SetConfigValueUpdate {
            get {
                return ResourceManager.GetString("Config_SetConfigValueUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///INSERT INTO [EDDSPerformance].[eddsdbo].[ConfigurationAudit] ([FieldName], [ServerName], [OldValue], [NewValue], [UserID], [CreatedOn])
        ///VALUES(@FieldName, @ServerName, @OldValue, @NewValue, @UserID, @CreatedOn).
        /// </summary>
        internal static string ConfigurationAudit_Create {
            get {
                return ResourceManager.GetString("ConfigurationAudit_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT [Id]
        ///      ,[FieldName]
        ///      ,[ServerName]
        ///      ,[OldValue]
        ///      ,[NewValue]
        ///      ,[UserID]
        ///      ,[CreatedOn]
        ///  FROM [eddsdbo].[ConfigurationAudit] with(nolock).
        /// </summary>
        internal static string ConfigurationAudit_ReadAll {
            get {
                return ResourceManager.GetString("ConfigurationAudit_ReadAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_DBCCResults]&apos;) AND type in (N&apos;U&apos;))
        ///BEGIN
        ///	SELECT [DBName]
        ///		  ,[DaysSinceLast]
        ///	FROM [eddsdbo].QoS_DBCCResults
        ///	WHERE LoggedDate = (SELECT MAX(LoggedDate) FROM [eddsdbo].QoS_DBCCResults)
        ///	AND DaysSinceLast &gt;= 7
        ///END.
        /// </summary>
        internal static string ConsistencyChecksNearingViolation {
            get {
                return ResourceManager.GetString("ConsistencyChecksNearingViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE rsr
        ///SET rsr.text_hash = msr.text_hash
        ///FROM [eddsdbo].[RHScriptsRun] rsr
        ///INNER JOIN @modified msr
        ///ON rsr.id = msr.id.
        /// </summary>
        internal static string ConvertRH_MD5toSHA1 {
            get {
                return ResourceManager.GetString("ConvertRH_MD5toSHA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance;
        ///
        ///DECLARE
        ///	@missedBackups INT = 0,
        ///	@missedDbcc INT = 0,
        ///	@failedServers INT = 0,
        ///	@failedDatabases INT = 0,
        ///	@maxDataLossMinutes INT = 0,
        ///	@ttrHours DECIMAL(6,2) = 0,
        ///	@backupFrequency DECIMAL (5,2) = 100,
        ///	@backupCoverage DECIMAL (5,2) = 100,
        ///	@dbccFrequency DECIMAL (5,2) = 100,
        ///	@dbccCoverage DECIMAL (5,2) = 100,
        ///	@rpoScore DECIMAL (5,2) = 100,
        ///	@rtoScore DECIMAL (5,2) = 100;
        ///
        ///SELECT @missedBackups = ISNULL((
        ///	SELECT COUNT(DISTINCT DBName)
        ///	FROM eddsdbo.QoS_BackSummary WITH(NOLOCK)
        ///	W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CountMissedBackupsAndIntegrityChecks {
            get {
                return ResourceManager.GetString("CountMissedBackupsAndIntegrityChecks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [msdb]
        ///GO
        ///
        ///
        ///DECLARE @jobId BINARY(16)
        ///SELECT @jobId = job_id FROM msdb.dbo.sysjobs WHERE (name = N&apos;QoS_CollectAgentUptime&apos;)
        ///IF (@jobId IS NOT NULL)
        ///BEGIN
        ///	EXEC msdb.dbo.sp_delete_job @job_id=@jobId, @delete_unused_schedule=1
        ///END
        ///
        ///GO
        ///
        ///
        ///BEGIN TRANSACTION
        ///DECLARE @ReturnCode INT
        ///SELECT @ReturnCode = 0
        ///
        ///IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N&apos;[Uncategorized (Local)]&apos; AND category_class=1)
        ///BEGIN
        ///EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N&apos;JOB&apos;, @type=N&apos;LOCAL&apos;, @name=N&apos;[Un [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_QoS_CollectAgentUptime {
            get {
                return ResourceManager.GetString("Create_QoS_CollectAgentUptime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = &apos;eddsdbo&apos; AND TABLE_NAME = &apos;QoS_DBCCLog&apos;)
        ///BEGIN
        ///EXEC(&apos;CREATE VIEW eddsdbo.QoS_DBCCLog
        ///AS
        ///SELECT
        ///	[DatabaseName],
        ///	[StartTime] AS DbccTime
        ///FROM [dbo].[CommandLog]
        ///WHERE CommandType = &apos;&apos;DBCC_CHECKDB&apos;&apos;
        ///	AND ErrorNumber = 0&apos;)
        ///END.
        /// </summary>
        internal static string CreateDBCCLogView {
            get {
                return ResourceManager.GetString("CreateDBCCLogView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [EDDSPerformance].[eddsdbo].[EnvironmentCheckRecommendations]
        ///([Scope],[Name],[Description],[Status],[Recommendation],[Value],[Section],[Severity])
        ///	VALUES
        ///(@Scope,@Name,@Description,@Status,@Recommendation,@Value,@Section,@Severity).
        /// </summary>
        internal static string CreateEnvironmentCheckRecommendations {
            get {
                return ResourceManager.GetString("CreateEnvironmentCheckRecommendations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id
        ///	WHERE st.name = N&apos;RHScriptsRunType&apos; AND ss.name = N&apos;eddsdbo&apos;)
        ///CREATE TYPE [eddsdbo].[RHScriptsRunType] AS TABLE(
        ///	[id] [bigint] NOT NULL,
        ///	[text_of_script] [text] NULL,
        ///	[text_hash] [nvarchar](512) NULL
        ///).
        /// </summary>
        internal static string CreateRHScriptsRunTableType {
            get {
                return ResourceManager.GetString("CreateRHScriptsRunTableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = &apos;RHScriptsRun&apos;)
        ///BEGIN
        ///	CREATE TABLE [eddsdbo].[RHScriptsRun](
        ///		[id] [bigint] IDENTITY(1,1) NOT NULL,
        ///		[version_id] [bigint] NULL,
        ///		[script_name] [nvarchar](255) NULL,
        ///		[text_of_script] [text] NULL,
        ///		[text_hash] [nvarchar](512) NULL,
        ///		[one_time_script] [bit] NULL,
        ///		[entry_date] [datetime] NULL,
        ///		[modified_date] [datetime] NULL,
        ///		[entered_by] [nvarchar](50) NULL,
        ///	PRIMARY KEY CLUSTERED 
        ///	(
        ///		[id] ASC
        ///	)WITH (PAD_INDEX = OFF, ST [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateRoundHouseTables {
            get {
                return ResourceManager.GetString("CreateRoundHouseTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [eddsdbo].[Databases]
        ///			([Name]
        ///			,[ServerId]
        ///			,[WorkspaceId]
        ///			,[Type]
        ///			,[LastDbccDate]
        ///			,[LastBackupLogDate]
        ///			,[LastBackupDiffDate]
        ///			,[LastBackupFullDate]
        ///			,[LastBackupFullDuration]
        ///			,[LastBackupDiffDuration]
        ///			,[LogBackupsDuration])
        ///     VALUES
        ///			(@name
        ///			,@serverId
        ///			,@workspaceId
        ///			,@type
        ///			,@lastDbccDate
        ///			,@lastBackupLogDate
        ///			,@lastBackupDiffDate
        ///			,@lastBackupFullDate
        ///			,@lastBackupFullDuration
        ///			,@lastBackupDiffDuration
        ///			,@logBackupsDuration).
        /// </summary>
        internal static string Database_Create {
            get {
                return ResourceManager.GetString("Database_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select
        ///	sd.Name
        ///from sys.databases sd with(nolock)
        ///where name = &apos;EDDS&apos;
        ///	OR name LIKE &apos;EDDS[0-9]%&apos;
        ///	OR name LIKE &apos;INV%&apos;.
        /// </summary>
        internal static string Database_GetByServer {
            get {
                return ResourceManager.GetString("Database_GetByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select *
        ///from [eddsdbo].[Databases] with(nolock)
        ///where Id = @Id.
        /// </summary>
        internal static string Database_Read {
            get {
                return ResourceManager.GetString("Database_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///FROM [eddsdbo].[Databases] with(nolock)
        ///WHERE [Name] = @name
        ///	and [ServerId] = @serverId.
        /// </summary>
        internal static string Database_ReadByNameAndServer {
            get {
                return ResourceManager.GetString("Database_ReadByNameAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///FROM [eddsdbo].[Databases] with(nolock)
        ///where [ServerId] = @serverId and [DeletedOn] is null and [Ignore] = 0.
        /// </summary>
        internal static string Database_ReadByServer {
            get {
                return ResourceManager.GetString("Database_ReadByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT count(*)
        ///FROM [eddsdbo].[Databases] with(nolock)
        ///where [ServerId] = @serverId and [DeletedOn] is null and [Ignore] = 0.
        /// </summary>
        internal static string Database_ReadCountByServer {
            get {
                return ResourceManager.GetString("Database_ReadCountByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT
        ///	Case when Min(LastBackupFullDate) &lt; Min(LastBackupDiffDate)
        ///		then Min(LastBackupFullDate)
        ///		else Min(LastBackupDiffDate)
        ///	end
        ///	FROM [eddsdbo].[Databases] with(nolock)
        ///	where serverId = @serverId and (LastBackupFullDate is not null OR LastBackupDiffDate is not null)
        ///	and [DeletedOn] is null and [Ignore] = 0.
        /// </summary>
        internal static string Database_ReadMostOutOfDateBackupFullDiffByServer {
            get {
                return ResourceManager.GetString("Database_ReadMostOutOfDateBackupFullDiffByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT TOP (1) LastDbccDate
        ///	FROM [eddsdbo].[Databases] with(nolock)
        ///	where serverId = @serverId and LastDbccDate is not null
        ///		and [DeletedOn] is null and [Ignore] = 0
        ///	order by LastDbccDate asc.
        /// </summary>
        internal static string Database_ReadMostOutOfDateDbccByServer {
            get {
                return ResourceManager.GetString("Database_ReadMostOutOfDateDbccByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///select *
        ///	FROM [eddsdbo].[Databases] with(nolock)
        ///	where ServerId = @serverId
        ///	and (datediff(day, LastBackupFullDate, @windowExceededDate) &gt; 0
        ///		OR datediff(day, LastBackupDiffDate, @windowExceededDate) &gt; 0)
        ///	and [DeletedOn] is null and [Ignore] = 0.
        /// </summary>
        internal static string Database_ReadOutOfDateDatabasesByBackups {
            get {
                return ResourceManager.GetString("Database_ReadOutOfDateDatabasesByBackups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///select *
        ///	FROM [eddsdbo].[Databases] with(nolock)
        ///	where ServerId = @serverId
        ///		and datediff(day, LastDbccDate, @windowExceededDate) &gt; 0
        ///		and [DeletedOn] is null and [Ignore] = 0.
        /// </summary>
        internal static string Database_ReadOutOfDateDatabasesByDbccs {
            get {
                return ResourceManager.GetString("Database_ReadOutOfDateDatabasesByDbccs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [eddsdbo].[Databases]
        ///   SET	[DeletedOn] = @DeletedOn
        ///		,[Ignore] = @Ignore
        ///		,[LastDbccDate] = @lastDbccDate
        ///		,[lastBackupLogDate] = @lastBackupLogDate
        ///		,[lastBackupDiffDate] = @lastBackupDiffDate
        ///		,[lastBackupFullDate] = @lastBackupFullDate
        ///		,[LastBackupFullDuration] = @lastBackupFullDuration
        ///		,[LastBackupDiffDuration] = @lastBackupDiffDuration
        ///		,[LogBackupsDuration] = @logBackupsDuration
        /// WHERE [Name] = @name
        ///	and [ServerId] = @serverId.
        /// </summary>
        internal static string Database_UpdateByNameAndServer {
            get {
                return ResourceManager.GetString("Database_UpdateByNameAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [eddsdbo].[DatabaseGaps]
        ///           ([DatabaseId]
        ///           ,[GapStart]
        ///           ,[GapEnd]
        ///           ,[Duration]
        ///           ,[ActivityType])
        ///     VALUES
        ///           (@DatabaseId
        ///           ,@start
        ///           ,@end
        ///           ,@Duration
        ///           ,@ActivityType).
        /// </summary>
        internal static string DatabaseGap_Create {
            get {
                return ResourceManager.GetString("DatabaseGap_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select top(1) *
        ///from [eddsdbo].[DatabaseGaps] with(nolock)
        ///where [DatabaseId] = @databaseId
        ///	and [GapStart] = @start
        ///	and [GapEnd] = @end
        ///	and [ActivityType] = @activityType.
        /// </summary>
        internal static string DatabaseGap_Exists {
            get {
                return ResourceManager.GetString("DatabaseGap_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT dg.Id, DatabaseId, GapStart as [Start], GapEnd as [End], Duration, ActivityType
        ///  FROM [eddsdbo].[DatabaseGaps] dg with(nolock)
        ///  inner join [eddsdbo].[Databases] d with(nolock) on d.id = dg.databaseid and d.serverid = @serverId
        ///  where [GapEnd] &gt;= @hourTimeStampStart and [GapEnd] &lt;= @hourTimeStampEnd
        ///	and ActivityType = @activityType
        ///	and [Duration] &gt;= @minDuration
        ///  order by [Duration] desc.
        /// </summary>
        internal static string DatabaseGap_ReadGapsLargerThanForHour {
            get {
                return ResourceManager.GetString("DatabaseGap_ReadGapsLargerThanForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP (1) dg.Id, DatabaseId, GapStart as [Start], GapEnd as [End], Duration, ActivityType
        ///  FROM [eddsdbo].[DatabaseGaps] dg with(nolock)
        ///  inner join [eddsdbo].[Databases] d with(nolock) on d.id = dg.databaseid and d.serverid = @serverId
        ///  where [GapEnd] &gt;= @hourTimeStampStart and [GapEnd] &lt;= @hourTimeStampEnd
        ///	and ActivityType = @activityType
        ///  order by [Duration] desc.
        /// </summary>
        internal static string DatabaseGap_ReadLargestGapsForHour {
            get {
                return ResourceManager.GetString("DatabaseGap_ReadLargestGapsForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;WITH CTE AS
        ///(
        ///SELECT 
        ///dg.Id, 
        ///DatabaseId,
        ///GapStart as [Start],
        ///GapEnd as [End],
        ///Duration,
        ///ActivityType,
        ///ROW_NUMBER() OVER(PARTITION BY [DatabaseId] ORDER BY [Duration] DESC) as [RowNum]
        ///  FROM [eddsdbo].[DatabaseGaps] dg with(nolock)
        ///  inner join [eddsdbo].[Databases] d with(nolock) on d.id = dg.DatabaseId and d.serverid = @serverId
        ///
        ///  where [GapEnd] &gt;= @hourTimeStampStart and [GapEnd] &lt;= @hourTimeStampEnd
        ///	and ActivityType = @activityType
        ///)
        ///SELECT CTE.Id, 
        ///DatabaseId,
        ///[Start],
        ///[End],
        ///Duration,
        ///ActivityTyp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseGap_ReadLargestGapsForHourAllDatabase {
            get {
                return ResourceManager.GetString("DatabaseGap_ReadLargestGapsForHourAllDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	[Database]
        ///FROM [eddsdbo].[MockDatabasesChecked]
        ///WHERE [Server] = @serverName.
        /// </summary>
        internal static string DatabaseTest_ReadAllByServer {
            get {
                return ResourceManager.GetString("DatabaseTest_ReadAllByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM [eddsdbo].[DataGridCache]
        ///WHERE WorkspaceId = @workspaceId.
        /// </summary>
        internal static string DataGridCache_Delete {
            get {
                return ResourceManager.GetString("DataGridCache_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DECLARE @dataGridHourTimeStamp DATETIME;
        ///SELECT TOP 1 @dataGridHourTimeStamp = [HourTimeStamp]
        ///		FROM [eddsdbo].[DataGridCache] dgc
        ///		INNER JOIN [eddsdbo].[Hours] h on h.ID = dgc.StartHourToReadAuditsFromDataGrid
        ///		WHERE WorkspaceId = @workspaceId
        ///
        ///SELECT CASE 
        ///	WHEN (SELECT TOP 1 1
        ///		FROM [eddsdbo].[Hours]
        ///		WHERE [ID] = @hourId AND [HourTimeStamp] &gt;= @dataGridHourTimeStamp) = 1 
        ///		THEN 1 
        ///	ELSE 0 
        ///END.
        /// </summary>
        internal static string DataGridCache_ReadUseDataGrid {
            get {
                return ResourceManager.GetString("DataGridCache_ReadUseDataGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[DataGridCache]
        ///SET [StartHourToReadAuditsFromDataGrid] = @hourId
        ///WHERE WorkspaceId = @workspaceId
        ///IF @@ROWCOUNT=0
        ///  INSERT INTO [eddsdbo].[DataGridCache] VALUES (@workspaceId, @hourId).
        /// </summary>
        internal static string DataGridCache_UpdateOrCreate {
            get {
                return ResourceManager.GetString("DataGridCache_UpdateOrCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.QoS_DBCCHistory.
        /// </summary>
        internal static string DbccHistory_Clear {
            get {
                return ResourceManager.GetString("DbccHistory_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///SELECT TOP (1) [LastCleanDbccDate]
        ///  FROM [eddsdbo].[MockDbccServerResults]
        ///  WHERE [Server] = @server 
        ///  AND [Database] = @database.
        /// </summary>
        internal static string DbccTest_ReadLast {
            get {
                return ResourceManager.GetString("DbccTest_ReadLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CAST(
        ///	CASE WHEN EXISTS(
        ///		SELECT name FROM [master].[dbo].[sysdatabases] WHERE [name] = &apos;EDDSPerformance&apos;) 
        ///		THEN 1 
        ///		ELSE 0 
        ///   END 
        ///AS BIT).
        /// </summary>
        internal static string DBExists {
            get {
                return ResourceManager.GetString("DBExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM EDDSPerformance.eddsdbo.EnvironmentCheckRecommendations
        ///WHERE 
        ///Scope not in (select distinct ServerName from EDDSPerformance.eddsdbo.[Server] where DeletedOn is null)
        ///and Scope &lt;&gt; &apos;Relativity&apos;
        ///
        ///--clear out previous results
        ///DELETE FROM EDDSPerformance.eddsdbo.EnvironmentCheckRecommendations
        ///WHERE Scope = @ServerName and [section] = &apos;SQL Configuration&apos;;.
        /// </summary>
        internal static string DeleteServerEnvironmentCheckRecommendations {
            get {
                return ResourceManager.GetString("DeleteServerEnvironmentCheckRecommendations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declare @trgName nvarchar(500) 
        ///Declare cur Cursor For Select [name] From sys.objects where type = &apos;tr&apos; 
        ///Open cur 
        ///Fetch Next From cur Into @trgName 
        ///While @@fetch_status = 0 
        ///Begin 
        /// Exec(&apos;drop trigger &apos; + @trgName) 
        /// Fetch Next From cur Into @trgName 
        ///End
        ///Close cur 
        ///Deallocate cur .
        /// </summary>
        internal static string DropAllTriggers {
            get {
                return ResourceManager.GetString("DropAllTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(N&apos;eddsdbo.EddsPerformanceVersion&apos;, N&apos;U&apos;) IS NULL
        ///BEGIN 
        ///CREATE TABLE [eddsdbo].[EddsPerformanceVersion](
        ///	[Major] [int] NOT NULL,
        ///	[Minor] [int] NOT NULL,
        ///	[Build] [int] NOT NULL,
        ///	[Revision] [int] NOT NULL,
        /// CONSTRAINT [PK_EddsPerformanceVersion] PRIMARY KEY CLUSTERED 
        ///(
        ///	[Major] ASC,
        ///	[Minor] ASC,
        ///	[Build] ASC,
        ///	[Revision] ASC
        ///)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
        ///) ON [PRIMARY]
        ///END;.
        /// </summary>
        internal static string EddsPerformanceVersion_Create {
            get {
                return ResourceManager.GetString("EddsPerformanceVersion_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.[EddsPerformanceVersion]
        ///(
        ///    Major,
        ///    Minor,
        ///    Build,
        ///    Revision
        ///) 
        ///VALUES
        ///(
        ///    @major,
        ///    @minor,
        ///    @build,
        ///    @revision
        ///).
        /// </summary>
        internal static string EddsPerformanceVersion_Insert {
            get {
                return ResourceManager.GetString("EddsPerformanceVersion_Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP (1) [Major]
        ///      ,[Minor]
        ///      ,[Build]
        ///      ,[Revision]
        ///  FROM [eddsdbo].[EddsPerformanceVersion]
        ///  order by [Major] desc, [Minor] desc, [Build] desc, [Revision] desc.
        /// </summary>
        internal static string EddsPerformanceVersion_Read {
            get {
                return ResourceManager.GetString("EddsPerformanceVersion_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Events]
        ///set [StatusID] = @cancelStatus
        ///where
        ///	[StatusID] in @statusesToCancel
        ///	and [SourceTypeId] not in @typesToExclude.
        /// </summary>
        internal static string Event_CancelEvents {
            get {
                return ResourceManager.GetString("Event_CancelEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///IF NOT EXISTS(SELECT * FROM [eddsdbo].[Events] (UPDLOCK) WHERE [SourceID] = @sourceID AND [SourceTypeID] = @sourceTypeID)
        ///BEGIN
        ///	INSERT INTO [eddsdbo].[Events]
        ///			   ([SourceTypeID]
        ///			  ,[SourceID]
        ///			  ,[StatusID]
        ///			  ,[TimeStamp]
        ///			  ,[EventHash]
        ///			  ,[Delay]
        ///			  ,[HourID]
        ///			  ,[PreviousEventId]
        ///			  ,[LastUpdated])
        ///		 VALUES
        ///			   (@sourceTypeID
        ///			  ,@sourceID
        ///			  ,@statusId
        ///			  ,getutcdate()
        ///			  ,@eventHash
        ///			  ,@delay
        ///			  ,@hourID
        ///			  ,@previousEventId
        ///			  ,getutcdate())
        ///	SELECT * FROM  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Event_Create {
            get {
                return ResourceManager.GetString("Event_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[Events]
        ///           ([SourceTypeID]
        ///		  ,[SourceID]
        ///		  ,[StatusID]
        ///		  ,[TimeStamp]
        ///		  ,[EventHash]
        ///		  ,[Delay]
        ///		  ,[HourID]
        ///		  ,[PreviousEventId]
        ///		  ,[LastUpdated])
        ///     VALUES
        ///           (@sourceTypeID
        ///		  ,@sourceID
        ///		  ,@statusId
        ///		  ,getutcdate()
        ///		  ,@eventHash
        ///		  ,@delay
        ///		  ,@hourID
        ///		  ,@previousEventId
        ///		  ,getutcdate())
        ///		   .
        /// </summary>
        internal static string Event_CreateMany {
            get {
                return ResourceManager.GetString("Event_CreateMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Delete from [eddsdbo].[Events]
        ///where ID = @Id.
        /// </summary>
        internal static string Event_Delete {
            get {
                return ResourceManager.GetString("Event_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Delete from [eddsdbo].[Events]
        ///where SourceTypeID = @eventType.
        /// </summary>
        internal static string Event_DeleteAllByType {
            get {
                return ResourceManager.GetString("Event_DeleteAllByType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///select top 1 1
        ///from eddsdbo.[Events]
        ///where [HourId] = @hourId
        ///and [SourceTypeId] = @sourceTypeId
        ///and [StatusId] = @statusId.
        /// </summary>
        internal static string Event_ExistsForHourTypeStatus {
            get {
                return ResourceManager.GetString("Event_ExistsForHourTypeStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select * from [eddsdbo].[Events] with(nolock)
        ///where ID = @Id
        ///.
        /// </summary>
        internal static string Event_ReadByID {
            get {
                return ResourceManager.GetString("Event_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select count(id)
        ///from eddsdbo.Events with(nolock)
        ///where Hourid = @hourId
        ///	and StatusID in @statusIds
        ///	and SourceTypeID != @eventTypeToExclude
        ///
        ///.
        /// </summary>
        internal static string Event_ReadCountByHourStatusTypes {
            get {
                return ResourceManager.GetString("Event_ReadCountByHourStatusTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select count(*)
        ///from eddsdbo.[Events] e with(nolock)
        ///where e.SourceTypeID = @sourceTypeId
        ///	AND e.SourceID = @sourceId
        ///	AND e.StatusId != 100 -- No duplicates.
        /// </summary>
        internal static string Event_ReadCountBySourceTypeAndId {
            get {
                return ResourceManager.GetString("Event_ReadCountBySourceTypeAndId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select count(*)
        ///from eddsdbo.[Events] e with(nolock)
        ///where e.SourceTypeID = @sourceTypeId
        ///	AND e.SourceID IS NULL
        ///	AND e.StatusId != 100 -- No duplicates.
        /// </summary>
        internal static string Event_ReadCountBySourceTypeAndNullId {
            get {
                return ResourceManager.GetString("Event_ReadCountBySourceTypeAndNullId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select count(id) from [eddsdbo].[Events] with(nolock)
        ///where StatusId = @status
        ///.
        /// </summary>
        internal static string Event_ReadCountByStatus {
            get {
                return ResourceManager.GetString("Event_ReadCountByStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select count(id) from [eddsdbo].[Events] with(nolock)
        ///where StatusId in @status
        ///.
        /// </summary>
        internal static string Event_ReadCountByStatuses {
            get {
                return ResourceManager.GetString("Event_ReadCountByStatuses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) [State]
        ///from [eddsdbo].[EventSourceSystemControl] with(nolock)
        ///
        ///.
        /// </summary>
        internal static string Event_ReadEventSystemState {
            get {
                return ResourceManager.GetString("Event_ReadEventSystemState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT TOP (@count) [ID]
        ///FROM [eddsdbo].[Events] with(nolock)
        ///WHERE StatusID = @eventStatus.
        /// </summary>
        internal static string Event_ReadIdsByStatus {
            get {
                return ResourceManager.GetString("Event_ReadIdsByStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT TOP (@count) [ID]
        ///FROM [eddsdbo].[Events] with(nolock)
        ///WHERE StatusID = @eventStatus
        ///AND SourceTypeID not in @excludeEventTypes.
        /// </summary>
        internal static string Event_ReadIdsByStatusAndType {
            get {
                return ResourceManager.GetString("Event_ReadIdsByStatusAndType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) * from [eddsdbo].[Events] with(nolock)
        ///order by id desc
        ///
        ///.
        /// </summary>
        internal static string Event_ReadLast {
            get {
                return ResourceManager.GetString("Event_ReadLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) *
        ///from eddsdbo.[Events] with(nolock)
        ///where SourceTypeID = @eventType
        ///and SourceID is null
        ///order by Id desc.
        /// </summary>
        internal static string Event_ReadLastByEventType {
            get {
                return ResourceManager.GetString("Event_ReadLastByEventType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) *
        ///from eddsdbo.[Events] with(nolock)
        ///where SourceTypeID = @eventType
        ///and SourceID = @sourceId
        ///order by Id desc.
        /// </summary>
        internal static string Event_ReadLastByEventTypeWithSourceId {
            get {
                return ResourceManager.GetString("Event_ReadLastByEventTypeWithSourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- This query groups all the events matching the event type and status filters. Then it filters the groups where there are status ids other than @status
        ///-- An example use case is you want to query the next pending singleton events that do not have any actively running.
        ///-- In this case, @eventTypes = single event types, @status = pending status, and @negativeStatuses = the active statuses (ie. in progress)
        ///
        ///SELECT min([ID])
        ///  FROM [eddsdbo].[Events] with(nolock)
        ///  where SourceTypeID in @eventTypes and (Stat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Event_ReadSingleByTypeAndStatus {
            get {
                return ResourceManager.GetString("Event_ReadSingleByTypeAndStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT distinct e.SourceTypeID
        ///from eddsdbo.[Events] e with(nolock)
        ///where e.SourceTypeID in @eventTypes and e.StatusID in @eventStatuses.
        /// </summary>
        internal static string Event_ReadTypesByTypeAndStatus {
            get {
                return ResourceManager.GetString("Event_ReadTypesByTypeAndStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Events]
        ///   SET [SourceTypeID] = @sourceTypeID
        ///	  ,[SourceID] = @sourceID
        ///      ,[StatusID] = @statusId
        ///	  ,[EventHash] = @eventHash
        ///	  ,[Delay] = @delay
        ///	  ,[LastUpdated] = getutcdate()
        ///	  ,[Retries] = @retries
        ///	  ,[ExecutionTime] = @executionTime
        ///	  ,[HourId] = @hourId
        /// WHERE ID = @Id.
        /// </summary>
        internal static string Event_Update {
            get {
                return ResourceManager.GetString("Event_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///update [eddsdbo].[EventSourceSystemControl]
        ///set [State] = @state
        ///
        ///
        ///.
        /// </summary>
        internal static string Event_UpdateEventSystemState {
            get {
                return ResourceManager.GetString("Event_UpdateEventSystemState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///UPDATE [eddsdbo].[Events]
        ///SET   [StatusID] = @updateStatus,
        ///      [Retries] = ISNULL([Retries], 0) + 1,
        ///	  [LastUpdated] = getutcdate()
        ///WHERE ID in @Ids.
        /// </summary>
        internal static string Event_UpdateStatusAndRetriesById {
            get {
                return ResourceManager.GetString("Event_UpdateStatusAndRetriesById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///UPDATE [eddsdbo].[Events]
        ///SET   [StatusID] = @updateStatus,
        ///	  [LastUpdated] = getutcdate()
        ///OUTPUT Inserted.*
        ///WHERE ID in @Ids.
        /// </summary>
        internal static string Event_UpdateStatusById {
            get {
                return ResourceManager.GetString("Event_UpdateStatusById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update eddsdbo.Events
        ///set StatusId = @timeoutStatus
        ///where (StatusID = @inprogressStatus and LastUpdated &lt;= @timeout) 
        ///OR (StatusID = @pendingHangfireStatus and DATEADD(ss, ISNULL(Delay, 0), LastUpdated) &lt;= @timeout).
        /// </summary>
        internal static string Event_UpdateTimedOutEvents {
            get {
                return ResourceManager.GetString("Event_UpdateTimedOutEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO eddsdbo.[EventLocks] (EventTypeId, SourceId, EventId, WorkerId)
        ///	VALUES (@eventTypeId, @sourceId, @eventId, @workerId)
        ///
        ///SELECT * FROM eddsdbo.[EventLocks] WHERE Id = @@IDENTITY.
        /// </summary>
        internal static string EventLock_Claim {
            get {
                return ResourceManager.GetString("EventLock_Claim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select *
        ///from eddsdbo.EventLocks
        ///where WorkerId = @workerId.
        /// </summary>
        internal static string EventLock_ReadByWorker {
            get {
                return ResourceManager.GetString("EventLock_ReadByWorker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM eddsdbo.EventLocks
        ///WHERE Id = @Id.
        /// </summary>
        internal static string EventLock_Release {
            get {
                return ResourceManager.GetString("EventLock_Release", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///delete from eddsdbo.EventLocks
        ///where WorkerId = @workerId.
        /// </summary>
        internal static string EventLock_ReleaseByWorker {
            get {
                return ResourceManager.GetString("EventLock_ReleaseByWorker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[EventLogs]
        ///           ([EventId]
        ///           ,[LogId])
        ///     VALUES
        ///           (@eventId
        ///           ,@logId).
        /// </summary>
        internal static string EventLog_Create {
            get {
                return ResourceManager.GetString("EventLog_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO eddsdbo.EventTypes
        ///	(Id, Name)
        ///	VALUES
        ///	(@id, @name).
        /// </summary>
        internal static string EventType_Create {
            get {
                return ResourceManager.GetString("EventType_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///truncate table [eddsdbo].[EventTypes].
        /// </summary>
        internal static string EventType_DeleteAll {
            get {
                return ResourceManager.GetString("EventType_DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[EventWorkers]
        ///			([Id]
        ///			,[Name]
        ///			,[Type])
        ///     VALUES
        ///			(@Id
        ///			,@name
        ///			,@type).
        /// </summary>
        internal static string EventWorker_Create {
            get {
                return ResourceManager.GetString("EventWorker_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///delete from [eddsdbo].[EventWorkers] WHERE [Id] = @Id.
        /// </summary>
        internal static string EventWorker_Delete {
            get {
                return ResourceManager.GetString("EventWorker_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select *
        ///from eddsdbo.EventWorkers with(nolock)
        ///where Id = @id.
        /// </summary>
        internal static string EventWorker_Read {
            get {
                return ResourceManager.GetString("EventWorker_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select *
        ///from eddsdbo.EventWorkers with(nolock).
        /// </summary>
        internal static string EventWorker_ReadAll {
            get {
                return ResourceManager.GetString("EventWorker_ReadAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[EventWorkers]
        ///	SET [Name] = @name
        ///		,[type] = @type
        ///	WHERE [Id] = @Id.
        /// </summary>
        internal static string EventWorker_Update {
            get {
                return ResourceManager.GetString("EventWorker_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///DECLARE @failedDatabases int = 0,
        ///	@failedServers int = 0,
        ///	@serverErrorMsg nvarchar(max),
        ///	@databaseErrorMsg nvarchar(max);
        ///
        ///IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_FailedDatabases]&apos;) AND type in (N&apos;U&apos;))
        ///BEGIN
        ///	SELECT @failedDatabases = COUNT(*),
        ///		@databaseErrorMsg = MIN(Errors)
        ///	FROM eddsdbo.QoS_FailedDatabases;
        ///END
        ///
        ///IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_tempServers]&apos;) AND type in (N&apos;U&apos;))
        ///BEGIN
        ///	SEL [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FailedMonitoringTargets {
            get {
                return ResourceManager.GetString("FailedMonitoringTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [EDDSPerformance].[eddsdbo].[QoS_RecoverabilityIntegritySummary]
        ///SET RowHash = HASHBYTES(&apos;SHA1&apos;,
        ///	CAST(ISNULL(RISID, 0) AS varchar) +
        ///	CAST(ISNULL(RecoverabilityIntegrityScore, 0) AS varchar)
        ///)
        ///WHERE RowHash IS NULL
        ///OPTION (MAXDOP 2).
        /// </summary>
        internal static string FCM_ApplySecondaryHashes {
            get {
                return ResourceManager.GetString("FCM_ApplySecondaryHashes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Expected Arguments
        ///-- @hourId int
        ///-- @logging bit
        ///
        ///
        ///DECLARE @summaryDayHour datetime,
        ///	@lastRatedHour datetime,
        ///	@loggingVars varchar(max),
        ///	@lastCompletedTask varchar(max),
        ///	@runStart datetime = getutcdate()
        ///
        ///-- Grab the summaryDayHour
        ///select @summaryDayHour = HourTimeStamp
        ///from eddsdbo.[Hours] as h
        ///where h.ID = @hourId
        ///
        ///--Verify the integrity of last hour&apos;s data
        ///SELECT @lastRatedHour = MAX(SummaryDayHour)
        ///FROM EDDSDBO.QoS_Ratings
        ///WHERE RowHash IS NOT NULL;.
        /// </summary>
        internal static string FCM_ValidatePreBARS {
            get {
                return ResourceManager.GetString("FCM_ValidatePreBARS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select f.CodeTypeID
        ///from eddsdbo.Field f
        ///inner join eddsdbo.ArtifactGuid ag on ag.ArtifactId = f.ArtifactId
        ///where ag.ArtifactGuid = @artifactGuid.
        /// </summary>
        internal static string Field_ReadChoiceTypeByGuid {
            get {
                return ResourceManager.GetString("Field_ReadChoiceTypeByGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSQoS
        ///
        ///declare @sql nvarchar(max) = N&apos;
        ///delete from &apos;+QUOTENAME(@eddsPerformanceServerName)+&apos;.eddsperformance.eddsdbo.FileLevelLatencyDetails
        ///where ServerName = @currentServerName;
        ///
        ///WITH 
        ///fsdata AS (
        ///	select
        ///		FileStatsID,
        ///		DBName,
        ///		ReadLatency,
        ///		WriteLatency,
        ///		LatencyScore,
        ///		ROW_NUMBER() OVER(PARTITION BY DBName ORDER BY ReadLatency+WriteLatency desc) AS rk
        ///	from eddsqos.eddsdbo.QoS_FileStats
        ///	where IsDataFile = 1
        ///),
        ///fslog AS (
        ///	select
        ///		FileStatsID,
        ///		DBName,
        ///		ReadLatency,
        ///		WriteLatency,
        ///		Lat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FileLevelLatency {
            get {
                return ResourceManager.GetString("FileLevelLatency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Get active SQL servers registered with Relativity */
        ///SELECT
        ///    RS.[ArtifactID],
        ///    RS.[Name],
        ///    RS.[Status],
        ///    RS.[Version],
        ///	A.TextIdentifier AS ServerType
        ///  FROM [EDDS].[eddsdbo].[ResourceServer] RS WITH(NOLOCK)
        ///  INNER JOIN [EDDS].[eddsdbo].[Artifact] A WITH(NOLOCK)
        ///  ON RS.[Type] = A.ArtifactID
        ///  INNER JOIN [EDDS].[eddsdbo].[Code] C WITH(NOLOCK)
        ///  ON RS.[Status] = C.ArtifactID
        ///  INNER JOIN [EDDS].[eddsdbo].[CodeType] CT WITH(NOLOCK)
        ///  ON CT.CodeTypeID = C.CodeTypeID
        ///  WHERE
        ///    C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetRegisteredSQLServers {
            get {
                return ResourceManager.GetString("GetRegisteredSQLServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 ServerID
        ///FROM EDDS.eddsdbo.[Case] WITH(NOLOCK)
        ///WHERE ArtifactID = @CaseArtifactID.
        /// </summary>
        internal static string GetServerForWorkspace {
            get {
                return ResourceManager.GetString("GetServerForWorkspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///--Escape apostrophes
        ///SET @module = ISNULL(LEFT(REPLACE(@module, &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;), 100), &apos;&apos;);
        ///SET @taskCompleted = ISNULL(LEFT(REPLACE(@taskCompleted, &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;), 500), &apos;&apos;);
        ///SET @otherVars = ISNULL(LEFT(REPLACE(@otherVars, &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;), 65535), &apos;&apos;);
        ///SET @nextTask = ISNULL(LEFT(REPLACE(@nextTask, &apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;), 500), &apos;&apos;);
        ///
        ///--set defaults
        ///set @AgentID = isnull(@AgentID, -1);
        ///set @logTimestampUtc = ISNULL(@logTimestampUtc, getutcdate());
        ///
        ///INSERT INTO eddsdbo.QoS_GlassRunLog(AgentID, LogTimestampUTC, Module,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlassRunLog_Insert {
            get {
                return ResourceManager.GetString("GlassRunLog_Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Select top(1) *
        ///from eddsdbo.QoS_GlassRunLog
        ///order by GRLogId desc.
        /// </summary>
        internal static string GlassRunLog_ReadLast {
            get {
                return ResourceManager.GetString("GlassRunLog_ReadLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Select top(@count) 
        ///	l.grlogid
        ///	,l.LogTimestampUTC
        ///	,l.Module
        ///	,l.TaskCompleted
        ///	,l.OtherVars
        ///	,l.NextTask
        ///	,l.AgentID
        ///	,l.LogLevel
        ///	,e.ID [EventId]
        ///	,e.SourceTypeID [EventTypeId]
        ///	,e.SourceID [EventSourceId]
        ///	,e.StatusID [EventStatusId]
        ///	,e.TimeStamp [EventTimeStamp]
        ///	,e.Delay [EventDelay]
        ///	,e.PreviousEventID [PreviousEventID]
        ///	,e.LastUpdated [EventLastUpdated]
        ///	,e.Retries [EventRetries]
        ///	,e.ExecutionTime [EventExecutionTime]
        ///	,e.HourId [EventHourId]
        ///from eddsdbo.QoS_GlassRunLog l with(nolock)
        ///left outer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlassRunLog_ReadLastByLogLevelWithEventInfo {
            get {
                return ResourceManager.GetString("GlassRunLog_ReadLastByLogLevelWithEventInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Select top(@count) 
        ///	l.grlogid
        ///	,l.LogTimestampUTC
        ///	,l.Module
        ///	,l.TaskCompleted
        ///	,l.OtherVars
        ///	,l.NextTask
        ///	,l.AgentID
        ///	,l.LogLevel
        ///	,e.ID [EventId]
        ///	,e.SourceTypeID [EventType]
        ///	,e.SourceID [EventSourceId]
        ///	,e.StatusID [EventStatusId]
        ///	,e.TimeStamp [EventTimeStamp]
        ///	,e.Delay [EventDelay]
        ///	,e.PreviousEventID [PreviousEventID]
        ///	,e.LastUpdated [EventLastUpdated]
        ///	,e.Retries [EventRetries]
        ///	,e.ExecutionTime [EventExecutionTime]
        ///	,e.HourId [EventHourId]
        ///from eddsdbo.QoS_GlassRunLog l with(nolock)
        ///left outer j [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlassRunLog_ReadLastFullLogWithEventInfo {
            get {
                return ResourceManager.GetString("GlassRunLog_ReadLastFullLogWithEventInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	Apply System Administrator group permissions to Performance Dashboard tabs in 8.2
        ///*/
        ///
        ///USE [EDDS];
        ///
        ///--GroupTab only exists in 8.2+
        ///IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = &apos;GroupTab&apos;) 
        ///BEGIN
        ///  --Declarations
        ///  DECLARE
        ///	@systemAdminGroupId int,
        ///	@pdbParentTabId int;
        ///
        ///  --Determine PDB parent tab artifact ID and apply permissions to it and all child tabs
        ///  SET @systemAdminGroupId =
        ///	(SELECT TOP 1 ArtifactID
        ///	FROM [EDDS].[eddsdbo].[Group]
        ///	WHERE Name = &apos;System Administra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GroupTab_ApplyGroupTabPermissions {
            get {
                return ResourceManager.GetString("GroupTab_ApplyGroupTabPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [EDDS].[eddsdbo].[GroupTab]
        ///WHERE TabArtifactID in @artifactIds.
        /// </summary>
        internal static string GroupTab_DeleteAll {
            get {
                return ResourceManager.GetString("GroupTab_DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[Hours]
        ///			([HourTimeStamp]
        ///           ,[Score]
        ///           ,[InSample]
        ///		   ,[StartedOn]
        ///		   ,[CompletedOn]
        ///		   ,[Status])
        ///     VALUES 
        ///			(@hourTimeStamp
        ///           ,@score
        ///           ,@inSample
        ///		   ,@StartedOn
        ///		   ,@CompletedOn
        ///		   ,@status)
        ///
        ///SELECT * FROM [eddsdbo].[Hours] with(nolock) WHERE ID = @@IDENTITY.
        /// </summary>
        internal static string Hour_Create {
            get {
                return ResourceManager.GetString("Hour_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM [eddsdbo].[Hours]
        ///      WHERE ID = @id.
        /// </summary>
        internal static string Hour_Delete {
            get {
                return ResourceManager.GetString("Hour_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///  FROM [eddsdbo].[Hours] with(nolock)
        ///  WHERE ID = @id.
        /// </summary>
        internal static string Hour_ReadByID {
            get {
                return ResourceManager.GetString("Hour_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///  FROM [eddsdbo].[Hours] with(nolock)
        ///  WHERE ID in @ids.
        /// </summary>
        internal static string Hour_ReadByIDs {
            get {
                return ResourceManager.GetString("Hour_ReadByIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select h.*
        ///from eddsdbo.[Hours] as h with(nolock)
        ///inner join eddsdbo.QoS_Ratings as r with(nolock) on r.SummaryDayHour = h.HourTimeStamp
        ///where 
        ///	h.HourTimeStamp &gt;= DATEADD(d, @backfillDays, getutcdate()) -- Is within the current backfill period
        ///	and h.Status = 3
        ///order by h.HourTimeStamp.
        /// </summary>
        internal static string Hour_ReadCompleteHours {
            get {
                return ResourceManager.GetString("Hour_ReadCompleteHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///declare @minData datetime = &apos;1/1/1753 12:00:00 AM&apos;;
        ///
        ///with hourTimeStamps (HourTimeStamp)
        ///as
        ///(
        ///select HourTimeStamp
        ///from eddsdbo.hours as h
        ///where HourTimeStamp = @minData and Status != 4
        ///
        ///union all
        ///
        ///select h.HourTimeStamp
        ///from eddsdbo.hours as h
        ///inner join hourTimeStamps hcte on hcte.HourTimeStamp = DateAdd(hour, -1, h.HourTimeStamp)
        ///where h.HourTimeStamp &gt; @minData and Status != 4
        ///)
        ///select top (1) * 
        ///from eddsdbo.Hours as h
        ///where h.HourTimeStamp in (select HourTimeStamp from hourTimeStamps)
        ///order by h.Hou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Hour_ReadHighestHourAfterMinHour {
            get {
                return ResourceManager.GetString("Hour_ReadHighestHourAfterMinHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- we want to read the hour if ALL of the category scores are scored so we are checking if there are any category scores that are NOT scored and then only taking the hour if there are none of those
        ///
        ///select distinct *
        ///	from eddsdbo.Hours with(nolock)
        ///	where ID = @hourId
        ///	and ID not in (
        ///		select distinct h.ID
        ///		from eddsdbo.Hours as h with(nolock)
        ///		inner join eddsdbo.Categories as c on c.HourID = h.ID
        ///		inner join eddsdbo.CategoryScores as cs on c.ID = cs.CategoryID
        ///		where h.ID = @hourId and cs.Score is  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Hour_ReadHourReadyForScoring {
            get {
                return ResourceManager.GetString("Hour_ReadHourReadyForScoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select h.Id
        ///from eddsdbo.Hours h with(nolock)
        ///where h.Status in (1, 2).
        /// </summary>
        internal static string Hour_ReadIncompleteHours {
            get {
                return ResourceManager.GetString("Hour_ReadIncompleteHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) * from [eddsdbo].[Hours] h with(nolock)
        ///where h.Status != 4
        ///order by HourTimeStamp desc.
        /// </summary>
        internal static string Hour_ReadLast {
            get {
                return ResourceManager.GetString("Hour_ReadLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) *
        ///from [eddsdbo].[Hours] with(nolock)
        ///where Status = 3
        ///order by HourTimeStamp desc.
        /// </summary>
        internal static string Hour_ReadLastCompleted {
            get {
                return ResourceManager.GetString("Hour_ReadLastCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select distinct h.* from eddsdbo.[Hours] as h with(nolock)
        ///where h.HourTimeStamp &gt;= @startDate and h.HourTimeStamp &lt;= @endDate and h.Status != 4.
        /// </summary>
        internal static string Hour_ReadLastnDays {
            get {
                return ResourceManager.GetString("Hour_ReadLastnDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select top(1) h.*
        ///from eddsdbo.[Hours] as h with(nolock)
        ///left outer join eddsdbo.QoS_Ratings as r with(nolock) on r.SummaryDayHour = h.HourTimeStamp and h.Status != 4
        ///where 
        ///	r.QRatingID is null -- No rating entry
        ///	and h.HourTimeStamp &gt;= DATEADD(d, @backfillDays, getutcdate()) -- Is within the current backfill period
        ///	and h.HourTimeStamp &gt; (
        ///		select 
        ///			ISNULL(MAX(SummaryDayHour), &apos;1800-01-01&apos;)
        ///		from eddsdbo.QoS_Ratings
        ///		) -- Is greater than the current Max timestamp from the ratings table
        ///		and h.Stat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Hour_ReadNextHourWithoutRatings {
            get {
                return ResourceManager.GetString("Hour_ReadNextHourWithoutRatings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Hours]
        ///   SET [HourTimeStamp] = @hourTimeStamp
        ///      ,[Score] = @score
        ///      ,[InSample] = @inSample
        ///	  ,[StartedOn] = @StartedOn
        ///	  ,[CompletedOn] = @CompletedOn
        ///	  ,[Status] = @status
        /// WHERE ID = @id.
        /// </summary>
        internal static string Hour_Update {
            get {
                return ResourceManager.GetString("Hour_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDSPerformance]
        ///
        ///
        ///UPDATE [eddsdbo].[HourSearchAuditBatches]
        ///set
        ///	[BatchesCreated] = @batchesCreated
        ///WHERE HourId = @hourId and ServerId = @serverId
        ///
        ///
        ///.
        /// </summary>
        internal static string HourSearchAuditBatch_UpdateByHourAndServer {
            get {
                return ResourceManager.GetString("HourSearchAuditBatch_UpdateByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///INSERT INTO [eddsdbo].[HourSearchAuditBatches]
        ///		([HourId]
        ///		,[ServerId]
        ///		,[BatchesCreated])
        ///	VALUES
        ///		(@hourId
        ///		,@serverId
        ///		,@batchesCreated)
        ///		
        ///select ID
        ///from [eddsdbo].[HourSearchAuditBatches]
        ///where [HourId] = @hourId and [ServerId] = @serverId.
        /// </summary>
        internal static string HourSearchAuditBatches_Create {
            get {
                return ResourceManager.GetString("HourSearchAuditBatches_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select ID 
        ///from eddsdbo.HourSearchAuditBatches hb
        ///where hb.HourId = @hourId and hb.ServerId = @serverId.
        /// </summary>
        internal static string HourSearchAuditBatches_ReadByHourAndServer {
            get {
                return ResourceManager.GetString("HourSearchAuditBatches_ReadByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///select top(1) h.*
        ///from eddsdbo.[MockHours] as mh with(nolock)
        ///inner join eddsdbo.[Hours] as h with(nolock) on h.Id = mh.HourId
        ///left outer join eddsdbo.QoS_Ratings as r with(nolock) on r.SummaryDayHour = h.HourTimeStamp and h.Status != 4
        ///where 
        ///	r.QRatingID is null -- No rating entry
        ///	and h.HourTimeStamp &gt; (
        ///		select 
        ///			ISNULL(MAX(SummaryDayHour), &apos;1800-01-01&apos;)
        ///		from eddsdbo.QoS_Ratings
        ///		) -- Is greater than the current Max timestamp from the ratings table
        ///		and h.Status != 4
        ///order by  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HourTest_ReadNextHourWithoutRatings {
            get {
                return ResourceManager.GetString("HourTest_ReadNextHourWithoutRatings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDSPerformance]
        ///
        ///delete r
        ///from eddsperformance.[eddsdbo].[EnvironmentCheckRecommendations] r
        ///inner join eddsqos.eddsdbo.EnvironmentCheckRecommendationsDefaults d on r.[Name] = d.Name
        ///where r.[Scope] = @Scope and d.ID = @ID
        ///
        ///INSERT INTO eddsperformance.[eddsdbo].[EnvironmentCheckRecommendations]
        ///           ([Scope]
        ///           ,[Name]
        ///           ,[Description]
        ///           ,[Status]
        ///           ,[Recommendation]
        ///           ,[Value]
        ///           ,[Section]
        ///           ,[Severity])
        ///(select top 1 
        ///	@Scope as [sc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InsertEnvCheckRecommendations_ById {
            get {
                return ResourceManager.GetString("InsertEnvCheckRecommendations_ById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDSPerformance]
        ///
        ///
        ///delete from [eddsdbo].[EnvironmentCheckServerDetails]
        ///where [ServerIPAddress] = @serverIPAddress
        ///
        ///INSERT INTO [eddsdbo].[EnvironmentCheckServerDetails]
        ///           ([ServerName]
        ///           ,[OSVersion]
        ///           ,[OSName]
        ///           ,[LogicalProcessors]
        ///           ,[Hyperthreaded]
        ///		   ,[ServerIPAddress])
        ///     VALUES
        ///           (@serverName
        ///           ,@osVersion
        ///           ,@osName
        ///           ,@LogicalProcessors
        ///           ,@hyperthreaded
        ///		   ,@serverIPAddress)
        ///
        ///
        ///
        ///.
        /// </summary>
        internal static string InsertEnvironmentCheckSeverDetails {
            get {
                return ResourceManager.GetString("InsertEnvironmentCheckSeverDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///IF NOT EXISTS (SELECT TOP 1 Name FROM eddsdbo.Configuration WHERE Section = &apos;kCura.PDB&apos; AND Name = &apos;RHTimeoutSeconds&apos;)
        ///BEGIN
        ///	INSERT INTO eddsdbo.Configuration
        ///		(Section, Name, Value, MachineName, [Description])
        ///	VALUES
        ///		(&apos;kCura.PDB&apos;, &apos;RHTimeoutSeconds&apos;, &apos;3600&apos;, &apos;&apos;, &apos;Commands executed by RoundhousE will time out after this interval (in seconds). If you experience timeout errors while importing PDB or during agent deployment tasks, increase this accordingly.&apos;)
        ///END.
        /// </summary>
        internal static string InsertRHTimeoutConfig {
            get {
                return ResourceManager.GetString("InsertRHTimeoutConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE Master;
        ///
        ///declare @sql nvarchar(max) = N&apos;declare @value nvarchar(max);
        ///SELECT @value = convert(nvarchar(max), value)
        ///FROM sys.fn_listextendedproperty ( &apos;&apos;EDDSPerformanceCreatedBy&apos;&apos;, default, default, default, default, default, default)
        ///
        ///IF NOT EXISTS (SELECT TOP 1 TABLE_NAME FROM [EDDSPerformance].INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = &apos;&apos;RHVersion&apos;&apos;)
        ///AND (@value is null)
        ///		SELECT 1;
        ///	ELSE
        ///		SELECT 0;
        ///&apos;;
        ///
        ///IF NOT EXISTS (SELECT 1 FROM sys.databases WHERE name = N&apos;EDDSPerformance&apos;)
        ///	SELECT 0;
        ///ELSE
        ///	EX [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IsPreRoundhousE {
            get {
                return ResourceManager.GetString("IsPreRoundhousE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --EDDSPerformance
        ///SELECT
        ///	[DbccTargetId],
        ///	[ServerName],
        ///	[DatabaseName],
        ///	[Active]
        ///FROM [eddsdbo].[DBCCTarget] WITH(NOLOCK).
        /// </summary>
        internal static string ListDbccTargets {
            get {
                return ResourceManager.GetString("ListDbccTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = &apos;QoS_FailedDatabases&apos; AND TABLE_SCHEMA = &apos;EDDSDBO&apos;)
        ///BEGIN
        ///	SELECT DBName
        ///	FROM eddsdbo.QoS_FailedDatabases WITH(NOLOCK)
        ///	ORDER BY DBName;
        ///END.
        /// </summary>
        internal static string ListMonitoringFailedDatabases {
            get {
                return ResourceManager.GetString("ListMonitoringFailedDatabases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = &apos;QoS_tempServers&apos; AND TABLE_SCHEMA = &apos;EDDSDBO&apos;)
        ///BEGIN
        ///	SELECT ServerName
        ///	FROM eddsdbo.QoS_tempServers WITH(NOLOCK)
        ///	WHERE Failed = 1
        ///	ORDER BY ServerName;
        ///END.
        /// </summary>
        internal static string ListMonitoringFailedServerNames {
            get {
                return ResourceManager.GetString("ListMonitoringFailedServerNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select *
        ///from eddsdbo.LogCategories with(nolock).
        /// </summary>
        internal static string LogCategories_ReadAll {
            get {
                return ResourceManager.GetString("LogCategories_ReadAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @friendlyName varchar(max) = &apos;DELETED: EDDS&apos; + CAST(@CaseArtifactID as varchar) + &apos;&apos;;
        ///
        ///SELECT TOP 1
        ///	@friendlyName = Name
        ///FROM EDDS.eddsdbo.[Case] WITH(NOLOCK)
        ///WHERE ArtifactID = @CaseArtifactID;
        ///
        ///SELECT @friendlyName;.
        /// </summary>
        internal static string LookupWorkspaceName {
            get {
                return ResourceManager.GetString("LookupWorkspaceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[MaintenanceSchedules]
        ///           ([StartTime]
        ///           ,[EndTime]
        ///           ,[Reason]
        ///           ,[Comments]
        ///           ,[IsDeleted])
        ///     VALUES
        ///           (@startTime
        ///           ,@endTime
        ///           ,@reason
        ///           ,@comments
        ///           ,@isDeleted)
        ///
        ///SELECT * FROM [eddsdbo].[MaintenanceSchedules] with(nolock) WHERE ID = @@IDENTITY.
        /// </summary>
        internal static string MaintenanceWindow_Create {
            get {
                return ResourceManager.GetString("MaintenanceWindow_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[MaintenanceSchedules]
        ///	SET [IsDeleted] = 1
        ///	WHERE ID = @id.
        /// </summary>
        internal static string MaintenanceWindow_Delete {
            get {
                return ResourceManager.GetString("MaintenanceWindow_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT CASE WHEN EXISTS(
        ///	SELECT *
        ///	  FROM [eddsdbo].[MaintenanceSchedules] with(nolock)
        ///	  WHERE [StartTime] &lt;= @hourTimeStamp AND
        ///	  [EndTime] &gt; @hourTimeStamp
        ///)
        ///THEN CAST(1 AS BIT)
        ///ELSE CAST(0 AS BIT) END.
        /// </summary>
        internal static string MaintenanceWindow_IsHourScheduled {
            get {
                return ResourceManager.GetString("MaintenanceWindow_IsHourScheduled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///  FROM [eddsdbo].[MaintenanceSchedules] with(nolock)
        ///  WHERE ID = @id.
        /// </summary>
        internal static string MaintenanceWindow_ReadByID {
            get {
                return ResourceManager.GetString("MaintenanceWindow_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ////*
        ///Equals = 0,
        ///LessThan = 1,
        ///GreaterThan = 2,
        ///LessThanEqual = 3,
        ///GreaterThanEqual = 4
        ///*/
        ///
        ////*
        ///declare @startTimeFilter datetime
        ///declare @endTimeFilter datetime
        ///declare @reasonFilter varchar(255)
        ///declare @commentFilter varchar(255)
        ///
        ///declare @startTimeOperator datetime
        ///declare @endTimeOperator datetime
        ///declare @reasonOperator int
        ///*/
        ///
        ///SELECT [ID]
        ///	  ,[StartTime]
        ///	  ,[EndTime]
        ///	  ,[Reason]
        ///	  ,[Comments]
        ///	  ,[IsDeleted]
        ///FROM [eddsdbo].[MaintenanceSchedules] with(nolock)
        ///WHERE [IsDeleted] = 0
        ///	AND
        ///	(@commentFil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MaintenanceWindow_ReadTable {
            get {
                return ResourceManager.GetString("MaintenanceWindow_ReadTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[MaintenanceSchedules]
        ///   SET [StartTime] = @startTime
        ///      ,[EndTime] = @endTime
        ///      ,[Reason] = @reason
        ///      ,[Comments] = @comments
        ///      ,[IsDeleted] = @isDeleted
        /// WHERE ID = @id.
        /// </summary>
        internal static string MaintenanceWindow_Update {
            get {
                return ResourceManager.GetString("MaintenanceWindow_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].metrics
        ///			([metricTypeID], [HourID])
        ///		VALUES
        ///			(@metricTypeID, @hourID).
        /// </summary>
        internal static string Metric_CreateInsert {
            get {
                return ResourceManager.GetString("Metric_CreateInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT m.*, mt.SampleType 
        ///	FROM [eddsdbo].[Metrics] (nolock) as m
        ///	inner join [eddsdbo].[MetricTypes] (nolock) as mt on mt.Id = m.MetricTypeID
        ///	where [MetricTypeID] = @metricTypeID and [HourID] = @hourID.
        /// </summary>
        internal static string Metric_CreateRead {
            get {
                return ResourceManager.GetString("Metric_CreateRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM [eddsdbo].[Metrics]
        ///      WHERE ID = @id.
        /// </summary>
        internal static string Metric_Delete {
            get {
                return ResourceManager.GetString("Metric_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT m.*, mt.SampleType 
        ///FROM [eddsdbo].[Metrics] as m with(nolock)
        ///inner join [eddsdbo].[MetricTypes] as mt with(nolock) on mt.Id = m.MetricTypeID
        ///WHERE m.ID = @id.
        /// </summary>
        internal static string Metric_ReadByID {
            get {
                return ResourceManager.GetString("Metric_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Metrics]
        ///   SET [MetricTypeID] = @metricTypeID
        ///      ,[HourID] = @hourID
        ///	WHERE [ID] = @id.
        /// </summary>
        internal static string Metric_Update {
            get {
                return ResourceManager.GetString("Metric_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[MetricData]
        ///			([MetricID]
        ///			,[ServerID]
        ///			,[Score])
        ///		VALUES
        ///			(@metricID
        ///			,@serverID
        ///			,@score).
        /// </summary>
        internal static string MetricData_Create {
            get {
                return ResourceManager.GetString("MetricData_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DELETE FROM [eddsdbo].[MetricData]
        ///      WHERE ID = @id.
        /// </summary>
        internal static string MetricData_Delete {
            get {
                return ResourceManager.GetString("MetricData_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select md.* from eddsdbo.MetricData as md with(nolock)
        ///inner join eddsdbo.Metrics as m with(nolock) on md.MetricID = m.ID
        ///inner join eddsdbo.MetricTypesToCategoryTypes as mt2ct with(nolock) on mt2ct.MetricTypeID = m.MetricTypeID
        ///inner join eddsdbo.Categories as c with(nolock) on c.CategoryTypeID = mt2ct.CategoryTypeID and c.HourID = m.HourID
        ///inner join eddsdbo.CategoryScores as cs with(nolock) on cs.CategoryID = c.ID
        ///where 
        ///	(cs.ServerID = @ServerId or (cs.ServerID is null and @ServerId is null))
        ///	and (md [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MetricData_ReadByCategoryScore {
            get {
                return ResourceManager.GetString("MetricData_ReadByCategoryScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select md.* from eddsdbo.MetricData as md with(nolock)
        ///inner join eddsdbo.Metrics as m with(nolock) on md.MetricID = m.ID
        ///inner join eddsdbo.MetricTypesToCategoryTypes as mt2ct with(nolock) on mt2ct.MetricTypeID = m.MetricTypeID
        ///inner join eddsdbo.Categories as c with(nolock) on c.CategoryTypeID = mt2ct.CategoryTypeID and c.HourID = m.HourID
        ///inner join eddsdbo.CategoryScores as cs with(nolock) on cs.CategoryID = c.ID
        ///inner join eddsdbo.[Hours] as h with(nolock) on m.HourID = h.ID
        ///where 
        ///	(cs.ServerID = @S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MetricData_ReadByCategoryTypeHour {
            get {
                return ResourceManager.GetString("MetricData_ReadByCategoryTypeHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///select top(1) md.*
        ///from eddsdbo.MetricData md  with(nolock)
        ///inner join eddsdbo.Metrics m  with(nolock) on m.Id = md.MetricId and m.HourId = @hourId and m.MetricTypeId = @metricType
        ///where md.[ServerID] = @serverID OR (md.[ServerID] is null and @serverID is null).
        /// </summary>
        internal static string MetricData_ReadByHourAndMetricTypeAndServer {
            get {
                return ResourceManager.GetString("MetricData_ReadByHourAndMetricTypeAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT * 
        ///	FROM [eddsdbo].[MetricData] with(nolock)
        ///	WHERE ID = @id.
        /// </summary>
        internal static string MetricData_ReadByID {
            get {
                return ResourceManager.GetString("MetricData_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///FROM [eddsdbo].[MetricData] with(nolock)
        ///where [MetricID] = @metricID and ([ServerID] = @serverID OR ([ServerID] is null and @serverID is null)).
        /// </summary>
        internal static string MetricData_ReadByMetricAndServer {
            get {
                return ResourceManager.GetString("MetricData_ReadByMetricAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///select top(1) md.*
        ///from eddsdbo.MetricData md with(nolock)
        ///inner join eddsdbo.Metrics m with(nolock) on m.ID = md.MetricID and m.MetricTypeID = @metricTypeId
        ///inner join eddsdbo.[Hours] h with(nolock) on h.ID = m.HourID
        ///where h.HourTimeStamp &gt;= @startTime
        ///	and h.HourTimeStamp &lt;= @endTime
        ///	and h.Status != 4
        ///	and md.ServerID = @serverId
        ///	and md.Score is not null -- this case *should* never happen but just in case
        ///order by score asc.
        /// </summary>
        internal static string MetricData_ReadWorstScoreInDateRange {
            get {
                return ResourceManager.GetString("MetricData_ReadWorstScoreInDateRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[MetricData]
        ///   SET [MetricID] = @metricID,
        ///       [ServerID] = @serverID,
        ///       [Score] = @score,
        ///	   [Data] = @data
        /// WHERE ID = @id.
        /// </summary>
        internal static string MetricData_Update {
            get {
                return ResourceManager.GetString("MetricData_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[MetricManagerExecutionStats]
        ///		([ExecutionId]
        ///		,[Start]
        ///		,[End]
        ///		,[Name]
        ///		,[TotalTime]
        ///		,[MaxTime]
        ///		,[Count])
        ///	VALUES
        ///		(@ExecutionId
        ///		,@Start
        ///		,@End
        ///		,@Name
        ///		,@TotalTime
        ///		,@MaxTime
        ///		,@Count).
        /// </summary>
        internal static string MetricManagerExecutionStat_Create {
            get {
                return ResourceManager.GetString("MetricManagerExecutionStat_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.[MockBackupSet] .
        /// </summary>
        internal static string MockBackup_Clear {
            get {
                return ResourceManager.GetString("MockBackup_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///INSERT INTO eddsdbo.[MockBackupSet] (
        ///	[Server],
        ///	[Database],
        ///	[BackupStartDate],
        ///	[BackupEndDate],
        ///	[BackupType]
        ///) VALUES (
        ///	@server,
        ///	@database,
        ///	@backupStartDate,
        ///	@backupEndDate,
        ///	@backupType).
        /// </summary>
        internal static string MockBackup_Create {
            get {
                return ResourceManager.GetString("MockBackup_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.[MockDatabasesChecked] .
        /// </summary>
        internal static string MockDatabasesChecked_Clear {
            get {
                return ResourceManager.GetString("MockDatabasesChecked_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///INSERT INTO eddsdbo.[MockDatabasesChecked] (
        ///	[Server],
        ///	[Database],
        ///	[CreatedOn]
        ///) VALUES (
        ///	@server,
        ///	@database,
        ///	@createdOn).
        /// </summary>
        internal static string MockDatabasesChecked_Create {
            get {
                return ResourceManager.GetString("MockDatabasesChecked_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.[MockDbccServerResults] .
        /// </summary>
        internal static string MockDbcc_Clear {
            get {
                return ResourceManager.GetString("MockDbcc_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///INSERT INTO eddsdbo.[MockDbccServerResults] (
        ///	[Server],
        ///	[Database],
        ///	[CaseArtifactID],
        ///	[LastCleanDBCCDate]
        ///) VALUES (
        ///	@server,
        ///	@database,
        ///	@caseArtifactID,
        ///	@lastCleanDBCCDate).
        /// </summary>
        internal static string MockDbcc_Create {
            get {
                return ResourceManager.GetString("MockDbcc_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///select top(1) h.*
        ///from eddsdbo.[MockHours] as mh with(nolock)
        ///inner join eddsdbo.[Hours] as h with(nolock) on h.Id = mh.HourId
        ///left outer join eddsdbo.QoS_Ratings as r with(nolock) on r.SummaryDayHour = h.HourTimeStamp and h.Status != 4
        ///where 
        ///	r.QRatingID is null -- No rating entry
        ///	and h.HourTimeStamp &gt; (
        ///		select 
        ///			ISNULL(MAX(SummaryDayHour), &apos;1800-01-01&apos;)
        ///		from eddsdbo.QoS_Ratings
        ///		) -- Is greater than the current Max timestamp from the ratings table
        ///		and h.Status != 4
        ///order by  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MockHour_ReadNextHourWithoutRatings {
            get {
                return ResourceManager.GetString("MockHour_ReadNextHourWithoutRatings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.[MockHours] .
        /// </summary>
        internal static string MockHours_Clear {
            get {
                return ResourceManager.GetString("MockHours_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///INSERT INTO eddsdbo.[MockHours] ([HourId]) VALUES (@id).
        /// </summary>
        internal static string MockHours_Create {
            get {
                return ResourceManager.GetString("MockHours_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///SELECT h.* 
        ///FROM eddsdbo.[Hours] h
        ///INNER JOIN eddsdbo.[MockHours] mh on h.Id = mh.HourId.
        /// </summary>
        internal static string MockHours_Read {
            get {
                return ResourceManager.GetString("MockHours_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///TRUNCATE TABLE eddsdbo.[MockServer] .
        /// </summary>
        internal static string MockServer_Clear {
            get {
                return ResourceManager.GetString("MockServer_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///INSERT INTO eddsdbo.[MockServer] ([ServerID]) VALUES (@serverId).
        /// </summary>
        internal static string MockServer_Create {
            get {
                return ResourceManager.GetString("MockServer_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT COUNT(*)
        ///FROM eddsdbo.QoS_WaitSummary ws WITH(NOLOCK)
        ///INNER JOIN eddsdbo.QoS_WaitDetail wd WITH(NOLOCK)
        ///ON ws.WaitSummaryID = wd.WaitSummaryID
        ///INNER JOIN eddsdbo.QoS_Waits w WITH(NOLOCK)
        ///ON wd.WaitTypeID = w.WaitTypeID
        ///INNER JOIN eddsdbo.[Server] s WITH(NOLOCK)
        ///ON s.ArtifactId = ws.ServerArtifactID
        ///WHERE ws.SummaryDayHour = @hourTimeStamp --QoS_SystemLoadSummary.SummaryDayHour
        ///	AND s.ServerID = @serverId
        ///	--AND ws.ServerArtifactID = @serverArtifactId --QoS_SystemLoadSummary.ServerArtifactID
        ///	AND w. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PoisonWait_ReadPoisonWaitsForHour {
            get {
                return ResourceManager.GetString("PoisonWait_ReadPoisonWaitsForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDS
        ///
        ///SELECT 
        ///	[ResourceServer].[ArtifactID]
        ///	,[ResourceServer].[Name]
        ///	,[ResourceServer].[URL]
        ///FROM [EDDS].[eddsdbo].[ResourceServer] with(nolock)
        ///INNER JOIN eddsdbo.Code with(nolock) ON Code.ArtifactID = [ResourceServer].[Type]
        ///WHERE Code.[Name] = &apos;SQL - Primary&apos;.
        /// </summary>
        internal static string PrimarySqlServer_Read {
            get {
                return ResourceManager.GetString("PrimarySqlServer_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT CASE WHEN EXISTS(
        ///	SELECT *
        ///		FROM eddsdbo.ProcessControl with(nolock)
        ///		WHERE ProcessControlID = @id
        ///			AND LastProcessExecDateTime &gt;= @timeThreshold
        ///			AND [LastExecSucceeded] = 1
        ///)
        ///THEN CAST(1 AS BIT)
        ///ELSE CAST(0 AS BIT) END.
        /// </summary>
        internal static string ProcessControl_HasRunSuccessfully {
            get {
                return ResourceManager.GetString("ProcessControl_HasRunSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT [ProcessControlID]
        ///      ,[ProcessTypeDesc]
        ///      ,[LastProcessExecDateTime]
        ///      ,[Frequency]
        ///      ,[LastExecSucceeded]
        ///      ,[LastErrorMessage]
        ///FROM eddsdbo.ProcessControl with(nolock).
        /// </summary>
        internal static string ProcessControl_ReadAll {
            get {
                return ResourceManager.GetString("ProcessControl_ReadAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT [ProcessControlID]
        ///      ,[ProcessTypeDesc]
        ///      ,[LastProcessExecDateTime]
        ///      ,[Frequency]
        ///      ,[LastExecSucceeded]
        ///      ,[LastErrorMessage]
        ///FROM eddsdbo.ProcessControl with(nolock)
        ///WHERE ProcessControlID = @id.
        /// </summary>
        internal static string ProcessControl_ReadById {
            get {
                return ResourceManager.GetString("ProcessControl_ReadById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[ProcessControl]
        ///   SET [ProcessControlID] = @ProcessControlID
        ///      ,[ProcessTypeDesc] = @ProcessTypeDesc
        ///      ,[LastProcessExecDateTime] = @LastProcessExecDateTime
        ///      ,[Frequency] = @Frequency
        ///      ,[LastExecSucceeded] = @LastExecSucceeded
        ///      ,[LastErrorMessage] = @LastErrorMessage
        ///WHERE ProcessControlID = @id.
        /// </summary>
        internal static string ProcessControl_Update {
            get {
                return ResourceManager.GetString("ProcessControl_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance;
        ///GO
        ///
        ///IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_AllDatabasesChecked]&apos;) AND type in (N&apos;U&apos;))
        ///	TRUNCATE TABLE eddsdbo.QoS_AllDatabasesChecked;
        ///	
        ///IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_DBCCBACKKEY]&apos;) AND type in (N&apos;U&apos;))
        ///	TRUNCATE TABLE eddsdbo.QoS_DBCCBACKKEY;
        ///	
        ///IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_BackResults]&apos;) AND type in (N&apos;U&apos;))
        ///	TRUNCATE TABLE eddsdbo.QoS_BackResul [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PurgeBackupDBCCTables {
            get {
                return ResourceManager.GetString("PurgeBackupDBCCTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance;
        ///GO
        ///
        ///IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_CasesToAudit]&apos;) AND type in (N&apos;U&apos;))
        ///	TRUNCATE TABLE eddsdbo.QoS_CasesToAudit;
        ///
        ///IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_GlassRunHistory]&apos;) AND type in (N&apos;U&apos;))
        ///	TRUNCATE TABLE eddsdbo.QoS_GlassRunHistory;
        ///
        ///IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[eddsdbo].[QoS_GlassRunLog]&apos;) AND type in (N&apos;U&apos;))
        ///	TRUNCATE TABLE eddsdbo.QoS_GlassRunLog;
        ///
        ///IF  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PurgeEDDSPerformanceTables {
            get {
                return ResourceManager.GetString("PurgeEDDSPerformanceTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///CASE WHEN 
        ///EXISTS(
        ///	SELECT TOP 1 *
        ///	FROM eddsdbo.[Hours] h
        ///	INNER JOIN eddsdbo.QoS_Ratings r ON h.HourTimeStamp = r.SummaryDayHour
        ///	WHERE h.ID = @hourId
        ///) THEN 1 
        ///ELSE 0 
        ///END.
        /// </summary>
        internal static string QoSRatings_Exist {
            get {
                return ResourceManager.GetString("QoSRatings_Exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select ResourceServerId, count_big(ID) as Count from 
        ///(
        ///	{0}
        ///) as a
        ///where ID not in
        ///(select Document from eddsdbo.AnalyticsExcludedDocuments)
        ///group by ResourceServerId.
        /// </summary>
        internal static string Read_CAATIndexSearchableDocumentCount {
            get {
                return ResourceManager.GetString("Read_CAATIndexSearchableDocumentCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select distinct obj.name
        ///from sys.objects as obj
        ///inner join sys.columns c on c.object_id = obj.object_id
        ///where 
        ///[type] = &apos;U&apos;
        ///and obj.name like &apos;zca_pop_[0-9]%&apos; and c.name = &apos;ID&apos;.
        /// </summary>
        internal static string Read_CAATPopTables {
            get {
                return ResourceManager.GetString("Read_CAATPopTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use EDDS
        ///
        ///select CAST(DATABASEPROPERTYEX(&apos;EDDS&apos;, &apos;COLLATION&apos;) as nvarchar(max)).
        /// </summary>
        internal static string ReadDatabaseCollation {
            get {
                return ResourceManager.GetString("ReadDatabaseCollation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///
        ////*
        ///Equals = 0,
        ///LessThan = 1,
        ///GreaterThan = 2,
        ///LessThanEqual = 3,
        ///GreaterThanEqual = 4
        ///*/
        ///
        ////*
        ///declare @serverNameFilter varchar(255)
        ///declare @sqlVersionFilter varchar(255)
        ///declare @adhocWorkloadFilter varchar(255)
        ///declare @maxServerMemoryFilter varchar(255)
        ///declare @maxdegreeOfParallelismFilter varchar(255)
        ///declare @tempDBDataFilesFilter varchar(255)
        ///declare @lastSQLRestartFilter datetime
        ///
        ///declare @adhocWorkloadOperator int
        ///declare @maxServerMemoryOperator int
        ///declare @maxDegreeOfParalle [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadEnvironmentCheckDatabaseDetails {
            get {
                return ResourceManager.GetString("ReadEnvironmentCheckDatabaseDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///
        ////* 
        ///declare @scopeFilter varchar(255)
        ///declare @nameFilter varchar(255)
        ///declare @descriptionFilter varchar(255)
        ///declare @statusFilter varchar(255)
        ///declare @recommendationFilter varchar(255)
        ///declare @valueFilter varchar(255)
        ///declare @sectionFilter varchar(255)
        ///*/
        ///
        ///
        ///select * from eddsdbo.EnvironmentCheckRecommendations
        ///where
        ///	(@scopeFilter is null or [Scope] like &apos;%&apos; + @scopeFilter + &apos;%&apos;) 
        ///and	(@nameFilter is null or [Name] like &apos;%&apos; + @nameFilter + &apos;%&apos;)  
        ///and	(@descriptionFilter is null or [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadEnvironmentCheckRecommendation {
            get {
                return ResourceManager.GetString("ReadEnvironmentCheckRecommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use EDDSQoS
        ///
        ///declare @sqlversion varchar(250)
        ///declare @tempDbFileCount int
        ///declare @lastSqlRestart datetime
        ///declare @adhocWorkloads int
        ///declare @maxDegreeOfParallelism int
        ///declare @maxServerMemory int
        ///
        ///declare @sql nvarchar(max)
        ///
        ///--sql server version
        ///set @sqlversion = (SELECT CAST( SERVERPROPERTY (&apos;edition&apos;) AS VARCHAR(MAX) ) + &apos; &apos; + CAST( SERVERPROPERTY(&apos;productversion&apos;) AS VARCHAR(MAX) ) + &apos; &apos; +CAST( SERVERPROPERTY (&apos;productlevel&apos;) AS VARCHAR(MAX) ) )
        ///
        ///--temp db file count
        ///set @tempDbFileCount = (SELECT C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadEnvironmentCheckServerDatabaseDetails {
            get {
                return ResourceManager.GetString("ReadEnvironmentCheckServerDatabaseDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///
        ////*
        ///Equals = 0,
        ///LessThan = 1,
        ///GreaterThan = 2,
        ///LessThanEqual = 3,
        ///GreaterThanEqual = 4
        ///*/
        ///
        ////* 
        ///declare @serverNameFilter varchar(255)
        ///declare @osnameFilter varchar(255)
        ///declare @osversionFilter varchar(255)
        ///declare @logicalProcessorsFilter varchar(255)
        ///declare @hypterthreadedFilter varchar(255)
        ///
        ///declare @logicalProcessorsOperator int
        ///*/
        ///
        ///select * from eddsdbo.[EnvironmentCheckServerDetails]
        ///where
        ///	(@serverNameFilter is null or [ServerName] like &apos;%&apos; + @serverNameFilter + &apos;%&apos;) 
        ///	and	(@osna [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadEnvironmentCheckServerDetails {
            get {
                return ResourceManager.GetString("ReadEnvironmentCheckServerDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///select * from eddsdbo.ProcessControl as pc
        ///where pc.LastExecSucceeded = 0 and pc.Frequency &gt; 0.
        /// </summary>
        internal static string ReadFaililngProcessControls {
            get {
                return ResourceManager.GetString("ReadFaililngProcessControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///
        ////*
        ///Equals = 0,
        ///LessThan = 1,
        ///GreaterThan = 2,
        ///LessThanEqual = 3,
        ///GreaterThanEqual = 4
        ///*/
        ///
        ////*
        ///declare @serverNameFilter varchar(255)
        ///declare @databaseNameFilter varchar(255)
        ///declare @scoreFilter varchar(255)
        ///declare @dataReadFilter varchar(255)
        ///declare @dataWriteFilter varchar(255)
        ///declare @logReadFilter varchar(255)
        ///declare @logWriteFilter varchar(255)
        ///
        ///declare @scoreOperator int
        ///declare @dataReadOperator int
        ///declare @dataWriteOperator int
        ///declare @logReadOperator int
        ///declare @logWriteO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadFileLatencyDetails {
            get {
                return ResourceManager.GetString("ReadFileLatencyDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use edds
        ///
        ///select [Name] from eddsdbo.ExtendedCode as ec
        ///where CodeType = &apos;filelocation&apos;.
        /// </summary>
        internal static string ReadFileServers {
            get {
                return ResourceManager.GetString("ReadFileServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 [Value]
        ///FROM [EDDS].[eddsdbo].[Configuration] WITH(NOLOCK)
        ///WHERE Name = &apos;Instance&apos;.
        /// </summary>
        internal static string ReadInstanceName {
            get {
                return ResourceManager.GetString("ReadInstanceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --Use the configured MDF/LDF paths (or the default if these are missing or empty)
        ///IF (ISNULL(@serverName, &apos;&apos;) = &apos;&apos;)
        ///	SET @serverName = @@SERVERNAME;
        ///
        ///DECLARE @eddsFilePath nvarchar(MAX) = (SELECT TOP 1 [physical_name] FROM sys.master_files WHERE [name] = &apos;EDDS&apos;);
        ///
        ///DECLARE @eddsDirPath nvarchar(MAX) = REPLACE(@eddsFilePath, &apos;Edds.mdf&apos;, &apos;&apos;);
        ///DECLARE @configDirPath nvarchar(MAX) = (SELECT TOP 1 [Value] FROM [EDDS].[eddsdbo].[Configuration]
        ///						WHERE Section = &apos;kCura.EDDS.SQLServer&apos;
        ///						AND Name = &apos;DataDire [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadMdfLdfDirectories {
            get {
                return ResourceManager.GetString("ReadMdfLdfDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///SELECT count(a.ArtifactID) as NumberOfAgents, at.Name
        ///FROM [EDDS].[eddsdbo].[Agent] as a WITH(NOLOCK)
        ///right join edds.eddsdbo.AgentType as at 
        ///on at.ArtifactID = a.AgentTypeArtifactID and (a.[Enabled] = 1 and a.[Updated] = 0)
        ///WHERE at.Name LIKE &apos;Performance Dashboard - %&apos;
        ///group by a.AgentTypeArtifactID, at.Name.
        /// </summary>
        internal static string ReadNumberOfEnabledAgents {
            get {
                return ResourceManager.GetString("ReadNumberOfEnabledAgents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --EDDSPerformance
        ///
        ///SELECT TOP 1 CAST(value as varchar(max))
        ///	FROM fn_listextendedproperty(default, default, default, default, default, default, default)
        ///	WHERE objtype is null and objname is null and name = &apos;QoS&apos;.
        /// </summary>
        internal static string ReadQoSExtendedProperty {
            get {
                return ResourceManager.GetString("ReadQoSExtendedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use edds
        ///
        ///select 
        ///rs.ArtifactID, 
        ///rs.name as ServerName, 
        ///c.name as ServerType, 
        ///rs.URL 
        ///from eddsdbo.ResourceServer as rs
        ///	inner join eddsdbo.Code as c on rs.[Type] = c.ArtifactID.
        /// </summary>
        internal static string ReadResourceServers {
            get {
                return ResourceManager.GetString("ReadResourceServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT id, text_of_script, text_hash
        ///FROM [eddsdbo].[RHScriptsRun].
        /// </summary>
        internal static string ReadRHScriptInfo {
            get {
                return ResourceManager.GetString("ReadRHScriptInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use EDDSPerformance
        ///
        ///select top(1) DATEDIFF(SECOND,[timestamp], GETUTCDATE()) as SecondsSinceLastAgentHistoryRecord
        ///	from eddsdbo.agenthistory
        ///	order by [timestamp] desc
        ///
        ///.
        /// </summary>
        internal static string ReadSecondsSinceLastAgentHistoryRecord {
            get {
                return ResourceManager.GetString("ReadSecondsSinceLastAgentHistoryRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select getutcdate().
        /// </summary>
        internal static string ReadServerUtcTime {
            get {
                return ResourceManager.GetString("ReadServerUtcTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT TOP 1 RecoverabilityIntegrityScore
        ///FROM eddsdbo.QoS_RecoverabilityIntegritySummary WITH(NOLOCK)
        ///WHERE SummaryDayHour &lt;= @summaryDayHour
        ///ORDER BY SummaryDayHour DESC
        ///.
        /// </summary>
        internal static string RecoverabilityIntegrity_ReadWeeklyScore {
            get {
                return ResourceManager.GetString("RecoverabilityIntegrity_ReadWeeklyScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --EDDSPerformance
        ///
        ///DELETE t
        ///FROM eddsdbo.DBCCTarget t
        ///WHERE NOT EXISTS (SELECT TOP 1 1 FROM sys.servers WHERE name = t.ServerName COLLATE DATABASE_DEFAULT)
        ///
        ///INSERT INTO eddsdbo.DBCCTarget (ServerName, DatabaseName, Active)
        ///SELECT name, &apos;EDDSQoS&apos;, 0
        ///FROM sys.servers s
        ///WHERE NOT EXISTS (SELECT TOP 1 1 FROM eddsdbo.DBCCTarget WHERE ServerName = s.name COLLATE DATABASE_DEFAULT).
        /// </summary>
        internal static string RefreshDbccTargets {
            get {
                return ResourceManager.GetString("RefreshDbccTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CASE WHEN Count(*) &gt; 0 THEN 1 ELSE 0 END AS &apos;ApplicationIsInstalled&apos;
        ///FROM [EDDS].eddsdbo.ArtifactGuid
        ///JOIN [EDDS].[eddsdbo].CaseApplication ON CaseApplication.ApplicationID = ArtifactGuid.ArtifactID
        ///WHERE ArtifactGuid = @applicationGuid.
        /// </summary>
        internal static string RelativityApplication_ApplicationIsInstalledOnEnvironment {
            get {
                return ResourceManager.GetString("RelativityApplication_ApplicationIsInstalledOnEnvironment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [Version]
        ///FROM [EDDS].eddsdbo.ArtifactGuid WITH(NOLOCK)
        ///JOIN [EDDS].[eddsdbo].CaseApplication WITH(NOLOCK) ON CaseApplication.ApplicationID = ArtifactGuid.ArtifactID
        ///WHERE ArtifactGuid = @applicationGuid AND CaseApplication.CaseID = @caseArtifactId.
        /// </summary>
        internal static string RelativityApplication_ApplicationVersionOnWorkspace {
            get {
                return ResourceManager.GetString("RelativityApplication_ApplicationVersionOnWorkspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CASE WHEN COUNT(*) &gt; 0 THEN 1 ELSE 0 END AS &apos;ArtifactExists&apos;
        ///FROM [EDDS].eddsdbo.Artifact (nolock)
        ///WHERE ArtifactID = @artifactId and DeleteFlag = 0.
        /// </summary>
        internal static string RelativityArtifact_Exists {
            get {
                return ResourceManager.GetString("RelativityArtifact_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @agentTypeID int = (SELECT TOP 1 ArtifactID FROM [EDDSDBO].[AgentType] WHERE [AgentTypeGuid] = @oldAgentGuid)
        ///
        ///DELETE FROM [EDDSDBO].[ApplicationGuid] WHERE [ArtifactGuid] = @oldAgentGuid
        ///DELETE FROM [EDDSDBO].[ApplicationAgentType] WHERE  AgentTypeArtifactID = @agentTypeID
        ///DELETE FROM [EDDSDBO].[AgentType] WHERE [AgentTypeGuid] = @oldAgentGuid.
        /// </summary>
        internal static string RemoveOldAgentTypeFromWorkspace {
            get {
                return ResourceManager.GetString("RemoveOldAgentTypeFromWorkspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDS
        ///--Gather all old Resource Files
        ///DECLARE @applicationGuid UNIQUEIDENTIFIER = &apos;60a1d0a3-2797-4fb3-a260-614cbfd3fa0d&apos;
        ///DECLARE @oldResourcefilesIds table(ArtifactId int);
        ///INSERT @oldResourcefilesIds(ArtifactId) 
        ///	SELECT ArtifactId 
        ///	FROM eddsdbo.ResourceFile 
        ///	WHERE ApplicationGuid = @applicationGuid 
        ///	AND ([Name] = &apos;kCura.PDB.Agent.Package.dll&apos;
        ///	OR [Name] = &apos;kCura.PDB.Agent.Trust.dll&apos;)
        ///
        ///--DELETE them
        ///IF (EXISTS (SELECT * 
        ///                 FROM INFORMATION_SCHEMA.TABLES 
        ///                 WHERE TABLE_SC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RemoveOldResourceFiles {
            get {
                return ResourceManager.GetString("RemoveOldResourceFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE rg
        ///FROM eddsdbo.Reports_RecoveryGaps rg
        ///INNER JOIN eddsdbo.[Databases] db on rg.DatabaseId = db.id
        ///WHERE GapResolutionDate is NULL 
        ///AND ActivityType = @ActivityType
        ///AND db.ServerId = @serverId.
        /// </summary>
        internal static string Reports_Gap_ClearUnresolvedActivityType {
            get {
                return ResourceManager.GetString("Reports_Gap_ClearUnresolvedActivityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.Reports_RecoveryGaps 
        ///    (DatabaseId,
        ///    ActivityType,
        ///    LastActivity,
        ///    GapResolutionDate,
        ///    GapSize) 
        ///    VALUES 
        ///    (@DatabaseId,
        ///    @ActivityType,
        ///    @LastActivity,
        ///    @GapResolutionDate,
        ///    @GapSize).
        /// </summary>
        internal static string Reports_Gap_Create {
            get {
                return ResourceManager.GetString("Reports_Gap_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.Reports_RecoverabilityIntegritySummary 
        ///        (HourId,
        ///        OverallScore,
        ///        RpoScore,
        ///        RtoScore,
        ///        BackupFrequencyScore,
        ///        BackupCoverageScore,
        ///        DbccFrequencyScore,
        ///        DbccCoverageScore) 
        ///    VALUES 
        ///        (@HourId,
        ///        @OverallScore,
        ///        @RpoScore,
        ///        @RtoScore,
        ///        @BackupFrequencyScore,
        ///        @BackupCoverageScore,
        ///        @DbccFrequencyScore,
        ///        @DbccCoverageScore).
        /// </summary>
        internal static string Reports_RecoverabilityIntegrity_Create {
            get {
                return ResourceManager.GetString("Reports_RecoverabilityIntegrity_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.Reports_RecoverabilityIntegrityRpoSummary 
        ///        (HourId,
        ///        WorstRpoDatabase,
        ///        RpoMaxDataLoss) 
        ///    VALUES 
        ///        (@HourId,
        ///        @WorstRpoDatabase,
        ///        @RpoMaxDataLoss).
        /// </summary>
        internal static string Reports_RecoverabilityIntegrityRpo_Create {
            get {
                return ResourceManager.GetString("Reports_RecoverabilityIntegrityRpo_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.Reports_RecoverabilityIntegrityRtoSummary 
        ///        (HourId,
        ///        WorstRtoDatabase,
        ///        RtoTimeToRecover) 
        ///    VALUES 
        ///        (@HourId,
        ///        @WorstRtoDatabase,
        ///        @RtoTimeToRecover).
        /// </summary>
        internal static string Reports_RecoverabilityIntegrityRto_Create {
            get {
                return ResourceManager.GetString("Reports_RecoverabilityIntegrityRto_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.Reports_RecoveryObjectives 
        ///    (DatabaseId,
        ///    RpoScore,
        ///    RpoMaxDataLoss,
        ///    RtoScore,
        ///    RtoTimeToRecover) 
        ///    VALUES 
        ///    (@DatabaseId,
        ///    @RpoScore,
        ///    @RpoMaxDataLoss,
        ///    NULL,
        ///    NULL).
        /// </summary>
        internal static string Reports_RecoveryObjectives_Rpo_Create {
            get {
                return ResourceManager.GetString("Reports_RecoveryObjectives_Rpo_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE eddsdbo.Reports_RecoveryObjectives 
        ///    SET RpoScore = @RpoScore,
        ///        RpoMaxDataLoss = @RpoMaxDataLoss
        ///    WHERE [DatabaseId] = @DatabaseId.
        /// </summary>
        internal static string Reports_RecoveryObjectives_Rpo_Update {
            get {
                return ResourceManager.GetString("Reports_RecoveryObjectives_Rpo_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO eddsdbo.Reports_RecoveryObjectives 
        ///    (DatabaseId,
        ///    RpoScore,
        ///    RpoMaxDataLoss,
        ///    RtoScore,
        ///    RtoTimeToRecover) 
        ///    VALUES 
        ///    (@DatabaseId,
        ///    NULL,
        ///    NULL,
        ///    @RtoScore,
        ///    @RtoTimeToRecover).
        /// </summary>
        internal static string Reports_RecoveryObjectives_Rto_Create {
            get {
                return ResourceManager.GetString("Reports_RecoveryObjectives_Rto_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE eddsdbo.Reports_RecoveryObjectives 
        ///    SET RtoScore = @RtoScore,
        ///        RtoTimeToRecover = @RtoTimeToRecover
        ///    WHERE [DatabaseId] = @DatabaseId.
        /// </summary>
        internal static string Reports_RecoveryObjectives_Rto_Update {
            get {
                return ResourceManager.GetString("Reports_RecoveryObjectives_Rto_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- params
        ///--declare @hourId int = (select top 1 h.Id from eddsdbo.[Hours] as h
        ///--	left join eddsdbo.Reports_SearchAudits as sa on sa.HourId = h.id
        ///--	where sa.ID is not null
        ///-- order by HourTimeStamp)
        ///--declare @serverId int = (select top 1 ServerID from eddsdbo.[Server] where DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0))
        ///
        ///DELETE FROM [eddsdbo].[Reports_WorkspaceSearchAudits]
        ///      WHERE HourId = @hourId and ServerId = @serverId
        ///
        ///DELETE FROM [eddsdbo].[Reports_SearchAudits]
        ///      WHERE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports_SearchAndWorkspace_Delete {
            get {
                return ResourceManager.GetString("Reports_SearchAndWorkspace_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[Reports_SearchAudits]
        ///           ([HourId]
        ///		   ,[ServerId]
        ///           ,[SearchId]
        ///		   ,[MinAuditId]
        ///           ,[UserId]
        ///           ,[WorkspaceId]
        ///           ,[IsComplex]
        ///           ,[TotalSearchAudits]
        ///           ,[PercentLongRunning]
        ///           ,[TotalExecutionTime])
        ///     VALUES
        ///           (@HourId
        ///		   ,@serverId
        ///           ,@searchId
        ///		   ,@minAuditId
        ///           ,@userId
        ///           ,@workspaceId
        ///           ,@isComplex
        ///           ,@totalSearchAudits
        ///           ,@percentLongRunn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports_SearchAudit_Create {
            get {
                return ResourceManager.GetString("Reports_SearchAudit_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///
        ///-- params
        ///--declare @hourId int = (select top 1 h.Id from eddsdbo.[Hours] as h
        ///--	left join eddsdbo.Reports_SearchAudits as sa on sa.HourId = h.id
        ///--	where sa.ID is not null
        ///-- order by HourTimeStamp)
        ///--declare @serverId int = (select top 1 ServerID from eddsdbo.[Server] where DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0))
        ///
        ///-- query additional data
        ///declare @summaryDayHour dateTime = (select top 1 HourTimeStamp from eddsdbo.[Hours] where id = @hourId)
        ///declare @serverArtifactID int = (se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports_SearchAudit_CreateSummaryRecord {
            get {
                return ResourceManager.GetString("Reports_SearchAudit_CreateSummaryRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- params
        ///--declare @serverId int = (select top 1 ServerID from eddsdbo.[Server] where DeletedOn is null and IgnoreServer is null)
        ///--declare @hourId int = (select top 1 Id from eddsdbo.[Hours] order by HourTimeStamp)
        ///--declare @workspaceId int = (select top 1 ArtifactID from edds.eddsdbo.[Case])
        ///--declare @score decimal(9,0) = 98.7
        ///--declare @totalUsers int = 123
        ///--declare @totalAudits bigint = 987654321000
        ///--declare @totalLongRunning bigint = 1234 -- (select sum(1) from eddsdbo.report)
        ///
        ///-- query addition [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports_ServerAudits_Create {
            get {
                return ResourceManager.GetString("Reports_ServerAudits_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[Reports_WorkspaceSearchAudits]
        ///           ([HourId]
        ///           ,[ServerId]
        ///		   ,[SearchId]
        ///		   ,[searchName]
        ///           ,[WorkspaceId]
        ///           ,[TotalExecutionTime]
        ///           ,[TotalSearchAudits]
        ///           ,[IsComplex])
        ///     VALUES
        ///           (@hourId
        ///           ,@serverId
        ///		   ,@searchId
        ///		   ,@searchName
        ///           ,@workspaceId
        ///           ,@totalExecutionTime
        ///           ,@totalSearchAudits
        ///           ,@isComplex).
        /// </summary>
        internal static string Reports_WorkspaceSearchAudits_Create {
            get {
                return ResourceManager.GetString("Reports_WorkspaceSearchAudits_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- params
        ///--declare @hourId int = (select top 1 h.Id from eddsdbo.[Hours] as h
        ///--	left join eddsdbo.Reports_SearchAudits as sa on sa.HourId = h.id
        ///--	where sa.ID is not null
        ///-- order by HourTimeStamp)
        ///--declare @serverId int = (select top 1 ServerID from eddsdbo.[Server] where DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0))
        ///
        ///-- query additional data
        ///declare @summaryDayHour dateTime = (select top 1 HourTimeStamp from eddsdbo.[Hours] with(nolock) where id = @hourId)
        ///declare @serverArtifact [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports_WorkspaceSearchAudits_CreateVarscatOutput {
            get {
                return ResourceManager.GetString("Reports_WorkspaceSearchAudits_CreateVarscatOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- params
        ///--declare @hourId int = (select top 1 h.Id from eddsdbo.[Hours] as h
        ///--	left join eddsdbo.Reports_SearchAudits as sa on sa.HourId = h.id
        ///--	where sa.ID is not null
        ///-- order by HourTimeStamp)
        ///--declare @serverId int = (select top 1 ServerID from eddsdbo.[Server] where DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0))
        ///
        ///-- query additional data
        ///declare @summaryDayHour dateTime = (select top 1 HourTimeStamp from eddsdbo.[Hours] with(nolock) where id = @hourId)
        ///declare @serverArtifact [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports_WorkspaceSearchAudits_CreateVarscatOutputDetails {
            get {
                return ResourceManager.GetString("Reports_WorkspaceSearchAudits_CreateVarscatOutputDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///IF (&apos;{0}&apos; &lt; DATEADD(dd, -1, getutcdate()))
        ///RETURN
        ///
        ///UPDATE [EDDSPerformance].[eddsdbo].[QoS_SampleHistory]
        ///SET RowHash = HASHBYTES(&apos;SHA1&apos;,
        ///	CAST(ISNULL(QSampleID, 0) AS varchar) +
        ///	CAST(ISNULL(QoSHourID, 0) AS varchar) +
        ///	CAST(ISNULL(SummaryDayHour, 0) AS varchar) +
        ///	CAST(ISNULL(ServerArtifactID, 0) AS varchar) +
        ///	CAST(ISNULL(ArrivalRate, 0) AS varchar) +
        ///	CAST(ISNULL(AVGConcurrency, 0) AS varchar)
        ///	)
        ///
        ///UPDATE [EDDSPerformance].[eddsdbo].[QoS_SystemLoadSummary]
        ///SET RowHash = HASHBYTES(&apos;SH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reset_RowHashes {
            get {
                return ResourceManager.GetString("Reset_RowHashes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///IF(NOT EXISTS(SELECT * FROM eddsdbo.QoS_SampleHistoryUX WHERE ServerId = @serverId AND HourId = @hourId))
        ///BEGIN
        ///	INSERT INTO eddsdbo.QoS_SampleHistoryUX(ServerId, HourId, IsActiveArrivalRateSample, IsActiveConcurrencySample)
        ///	VALUES(@serverId, @hourId, @isActiveArrivalRateSample, @isActiveConcurrencySample)
        ///END
        ///ELSE
        ///BEGIN
        ///	UPDATE eddsdbo.QoS_SampleHistoryUX
        ///	SET IsActiveArrivalRateSample = @isActiveArrivalRateSample
        ///	,IsActiveConcurrencySample = @isActiveConcurrencySample
        ///	WHERE ServerId = @serverId 
        ///		AN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleHistory_AddCurrentSample {
            get {
                return ResourceManager.GetString("SampleHistory_AddCurrentSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///FROM eddsdbo.QoS_SampleHistoryUX with(nolock)
        ///WHERE [IsActiveArrivalRateSample] = 1
        ///	AND ServerId = @serverId.
        /// </summary>
        internal static string SampleHistory_ReadCurrentArrivalRateSample {
            get {
                return ResourceManager.GetString("SampleHistory_ReadCurrentArrivalRateSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///FROM eddsdbo.QoS_SampleHistoryUX with(nolock)
        ///WHERE [IsActiveConcurrencySample] = 1
        ///	AND ServerId = @serverId.
        /// </summary>
        internal static string SampleHistory_ReadCurrentConcurrencySample {
            get {
                return ResourceManager.GetString("SampleHistory_ReadCurrentConcurrencySample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///DECLARE @upper datetime,
        ///    @lower datetime;
        ///
        /// --Take the most recent audited hour as the upper bound of the hours we&apos;ve scored
        ///SELECT @upper = MAX([HourTimeStamp])
        ///FROM eddsdbo.[Hours] as h with(nolock)
        ///WHERE h.Score is not null and h.Status != 4;
        ///
        ///--The lower bound is 90 days prior to that or the earliest scored hour
        ///SELECT @lower = MIN([HourTimeStamp])
        ///FROM eddsdbo.[Hours] as h with(nolock)
        ///WHERE h.Score is not null and [HourTimeStamp] &gt; DATEADD(dd, -90, @upper) and h.Status != 4;
        ///
        ///--Output the lower  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleHistory_ReadSampleRange {
            get {
                return ResourceManager.GetString("SampleHistory_ReadSampleRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///delete from eddsdbo.QoS_SampleHistoryUX
        ///where HourId = @hourId.
        /// </summary>
        internal static string SampleHistory_RemoveHourFromSample {
            get {
                return ResourceManager.GetString("SampleHistory_RemoveHourFromSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE eddsdbo.QoS_SampleHistoryUX
        ///SET IsActiveArrivalRateSample = 0
        ///,IsActiveConcurrencySample = 0
        ///WHERE ServerId = @serverId.
        /// </summary>
        internal static string SampleHistory_ResetCurrentSample {
            get {
                return ResourceManager.GetString("SampleHistory_ResetCurrentSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE eddsdbo.QoS_SampleHistoryUX
        ///SET IsActiveArrivalRateSample = @isActiveArrivalRateSample
        ///,IsActiveConcurrencySample = @isActiveConcurrencySample
        ///WHERE ServerId = @serverId 
        ///	AND HourId = @hourId.
        /// </summary>
        internal static string SampleHistory_Update {
            get {
                return ResourceManager.GetString("SampleHistory_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete from [EDDSPerformance].[eddsdbo].[EnvironmentCheckDatabaseDetails]
        ///where [ServerName] = @serverName;
        ///
        ///INSERT INTO [EDDSPerformance].[eddsdbo].[EnvironmentCheckDatabaseDetails]
        ///		   ([ServerName]
        ///		   ,[SQLVersion]
        ///		   ,[AdHocWorkLoad]
        ///		   ,[MaxServerMemory]
        ///		   ,[MaxDegreeOfParallelism]
        ///		   ,[TempDBDataFiles]
        ///		   ,[LastSQLRestart])
        ///	 VALUES
        ///		   (@serverName
        ///		   ,@sqlversion
        ///		   ,@adhocWorkloads
        ///		   ,@maxServerMemory
        ///		   ,@maxDegreeOfParallelism
        ///		   ,@tempDbFileCount
        ///		   ,@lastSqlRestart).
        /// </summary>
        internal static string SaveEnvironmentCheckServerDetails {
            get {
                return ResourceManager.GetString("SaveEnvironmentCheckServerDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[SearchAuditBatch](
        ///		WorkspaceId
        ///		,BatchStart
        ///		,BatchSize
        ///		,Completed
        ///		,HourSearchAuditBatchId)
        ///	VALUES(
        ///		@workspaceId
        ///		,@batchStart
        ///		,@batchSize
        ///		,0
        ///		,@hourSearchAuditBatchId).
        /// </summary>
        internal static string SearchAuditBatch_Create {
            get {
                return ResourceManager.GetString("SearchAuditBatch_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///DELETE FROM eddsdbo.[SearchAuditBatch]
        ///WHERE [HourSearchAuditBatchId] = @hourSearchAuditBatchId.
        /// </summary>
        internal static string SearchAuditBatch_DeleteByHourBatchId {
            get {
                return ResourceManager.GetString("SearchAuditBatch_DeleteByHourBatchId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT b.*, hsab.HourId, hsab.ServerId
        ///FROM eddsdbo.[SearchAuditBatch] b with(nolock)
        ///inner join eddsdbo.HourSearchAuditBatches hsab on b.HourSearchAuditBatchId = hsab.Id
        ///WHERE b.[Id] = @batchId.
        /// </summary>
        internal static string SearchAuditBatch_Read {
            get {
                return ResourceManager.GetString("SearchAuditBatch_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select b.*, hsab.HourId, hsab.ServerId
        ///from eddsdbo.SearchAuditBatch as b with(nolock)
        ///inner join eddsdbo.HourSearchAuditBatches hsab on b.HourSearchAuditBatchId = hsab.Id
        ///where hsab.ServerId = @serverId and hsab.HourId = @hourId.
        /// </summary>
        internal static string SearchAuditBatch_ReadByHourAndServer {
            get {
                return ResourceManager.GetString("SearchAuditBatch_ReadByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///UPDATE [eddsdbo].[SearchAuditBatch]
        ///set		BatchStart = @batchStart
        ///		,BatchSize = @batchSize
        ///		,Completed = @completed
        ///Where ID = @id.
        /// </summary>
        internal static string SearchAuditBatch_Update {
            get {
                return ResourceManager.GetString("SearchAuditBatch_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[SearchAuditBatchResult](
        ///		BatchId
        ///		,UserId
        ///		,TotalComplexQueries
        ///		,TotalLongRunningQueries
        ///		,TotalSimpleLongRunningQueries
        ///		,TotalQueries
        ///		,TotalExecutionTime)
        ///	VALUES(
        ///		@batchId
        ///		,@userId
        ///		,@totalComplexQueries
        ///		,@totalLongRunningQueries
        ///		,@totalSimpleLongRunningQueries
        ///		,@totalQueries
        ///		,@totalExecutionTime)
        ///.
        /// </summary>
        internal static string SearchAuditBatchResult_Create {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///DELETE result
        ///FROM eddsdbo.SearchAuditBatchResult result
        ///INNER JOIN eddsdbo.SearchAuditBatch batch ON result.BatchId = batch.Id
        ///WHERE batch.HourSearchAuditBatchId = @hourSearchAuditBatchId.
        /// </summary>
        internal static string SearchAuditBatchResult_DeleteByHourBatchId {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_DeleteByHourBatchId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- Count 1 or greater = true
        ///select
        ///	case when
        ///	count(b.id) &gt;= max(hb.BatchesCreated)
        ///	then 1 else 0 end
        ///from eddsdbo.HourSearchAuditBatches as hb WITH(NOLOCK)
        ///	left outer join eddsdbo.SearchAuditBatch b with(nolock) on hb.id = b.hoursearchauditbatchid and b.Completed = 1
        ///where
        ///		hb.ServerId = @serverId and hb.HourId =  @hourId -- for the given server and hour
        ///group by hb.HourId, hb.ServerId.
        /// </summary>
        internal static string SearchAuditBatchResult_ExistByHourAndServer {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_ExistByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT Id FROM [eddsdbo].[SearchAuditBatchResult] with(nolock)
        ///	where [BatchId] = @batchId and [UserId] = @userId.
        /// </summary>
        internal static string SearchAuditBatchResult_ReadByBatchAndUser {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_ReadByBatchAndUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///FROM eddsdbo.[SearchAuditBatchResult] with(nolock)
        ///WHERE [BatchId] = @batchId.
        /// </summary>
        internal static string SearchAuditBatchResult_ReadByBatchId {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_ReadByBatchId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select br.*
        ///from eddsdbo.SearchAuditBatch as b with(nolock)
        ///inner join eddsdbo.SearchAuditBatchResult as br with(nolock) on b.Id = br.BatchId
        ///inner join eddsdbo.HourSearchAuditBatches hsab on b.HourSearchAuditBatchId = hsab.Id
        ///where hsab.ServerId = @serverId and hsab.HourId = @hourId.
        /// </summary>
        internal static string SearchAuditBatchResult_ReadByHourAndServer {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_ReadByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///update [eddsdbo].[SearchAuditBatchResult]
        ///	set TotalComplexQueries = @totalComplexQueries
        ///		,TotalLongRunningQueries = @totalLongRunningQueries
        ///		,TotalSimpleLongRunningQueries = @totalSimpleLongRunningQueries
        ///		,TotalQueries = @totalQueries
        ///		,TotalExecutionTime = @totalExecutionTime
        ///	where [BatchId] = @batchId and [UserId] = @userId
        ///.
        /// </summary>
        internal static string SearchAuditBatchResult_Update {
            get {
                return ResourceManager.GetString("SearchAuditBatchResult_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(folderArtifactID)
        ///FROM eddsdbo.SearchFolder WITH(NOLOCK)
        ///WHERE @searchArtifactId = SearchFolder.SearchArtifactID.
        /// </summary>
        internal static string SearchFolder_ReadTotalForSearchId {
            get {
                return ResourceManager.GetString("SearchFolder_ReadTotalForSearchId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO [eddsdbo].[Server]
        ///           ([ServerName]
        ///           ,[CreatedOn]
        ///           ,[DeletedOn]
        ///           ,[ServerTypeID]
        ///           ,[ServerIPAddress]
        ///           ,[IgnoreServer]
        ///           ,[ResponsibleAgent]
        ///           ,[ArtifactID]
        ///           ,[LastChecked]
        ///           ,[UptimeMonitoringResourceHost]
        ///           ,[UptimeMonitoringResourceUseHttps]
        ///           ,[LastServerBackup]
        ///           ,[AdminScriptsVersion]
        ///		   ,[IsQoSDeployed])
        ///     VALUES
        ///           (@serverName
        ///			,@createdOn
        ///			,@delete [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Server_Create {
            get {
                return ResourceManager.GetString("Server_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Server]
        ///   SET [DeletedOn] = getutcdate()
        ///WHERE
        ///	ServerID = @serverID
        ///.
        /// </summary>
        internal static string Server_Delete {
            get {
                return ResourceManager.GetString("Server_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///FROM [eddsdbo].[Server] with(nolock)
        ///where 
        ///	DeletedOn is null
        ///	and (IgnoreServer is null or IgnoreServer = 0)
        ///  .
        /// </summary>
        internal static string Server_ReadAllActive {
            get {
                return ResourceManager.GetString("Server_ReadAllActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///select *
        ///from [eddsdbo].[Server] with(nolock)
        ///where ServerID = @serverId.
        /// </summary>
        internal static string Server_ReadByID {
            get {
                return ResourceManager.GetString("Server_ReadByID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Returns either the ArtifactID of the Primary SQL server that has no associated Cases (Workspaces), or NULL
        ///
        ///SELECT s.ArtifactID
        ///FROM EDDS.eddsdbo.[Case] c WITH(NOLOCK)
        ///RIGHT JOIN EDDS.eddsdbo.[ExtendedResourceServer] s WITH(NOLOCK)
        ///	ON c.ServerID = s.ArtifactID
        ///WHERE Type = &apos;SQL - Primary&apos;
        ///	AND c.ArtifactID is null.
        /// </summary>
        internal static string Server_ReadPrimaryStandalone {
            get {
                return ResourceManager.GetString("Server_ReadPrimaryStandalone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select *
        ///from eddsdbo.[Server] with(nolock)
        ///where IsQosDeployed = 0
        ///and DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0)
        ///and ServerTypeId = @databaseServerTypeId.
        /// </summary>
        internal static string Server_ReadServerPendingQosDeployment {
            get {
                return ResourceManager.GetString("Server_ReadServerPendingQosDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT c.ArtifactID
        ///FROM [EDDSPerformance].[eddsdbo].[Server] s with(nolock)
        ///inner join [EDDS].[eddsdbo].[Case] c with(nolock) on s.ArtifactID = c.ServerID
        ///inner join [EDDS].[eddsdbo].[Artifact] a with(nolock) on c.ArtifactID = a.ArtifactID
        ///inner join [EDDS].[eddsdbo].[WorkspaceUpgradeStatus] us with(nolock) on c.ArtifactID = us.ArtifactID
        ///WHERE s.[ServerID] = @serverId -- on this specific server
        ///AND a.DeleteFlag &lt;&gt; 1 -- Not deleted
        ///AND c.ArtifactID &lt;&gt; -1 -- Not admin case
        ///AND us.[Status] = 5 -- Completed w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Server_ReadWorkspaceIds {
            get {
                return ResourceManager.GetString("Server_ReadWorkspaceIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///UPDATE [eddsdbo].[Server]
        ///   SET [ServerName] = @serverName
        ///      ,[CreatedOn] = @createdOn
        ///      ,[DeletedOn] = @deletedOn
        ///      ,[ServerTypeID] = @serverTypeID
        ///      ,[ServerIPAddress] = @serverIPAddress
        ///      ,[IgnoreServer] = @ignoreServer
        ///      ,[ResponsibleAgent] = @responsibleAgent
        ///      ,[ArtifactID] = @artifactID
        ///      ,[LastChecked] = @lastChecked
        ///      ,[UptimeMonitoringResourceHost] = @uptimeMonitoringResourceHost
        ///      ,[UptimeMonitoringResourceUseHttps] = @uptimeMonitoringResourceUseHttps
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Server_Update {
            get {
                return ResourceManager.GetString("Server_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update eddsdbo.[Server]
        ///set IsQosDeployed = 0
        ///where DeletedOn is null and (IgnoreServer is null or IgnoreServer = 0)
        ///and ServerTypeID = 3.
        /// </summary>
        internal static string Server_UpdateActiveServersPendingQosDeployment {
            get {
                return ResourceManager.GetString("Server_UpdateActiveServersPendingQosDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///--@serverCleanupId
        ///
        ///INSERT INTO eddsdbo.ServerCleanups (ServerId, HourId, Success)
        ///VALUES(@serverId, @hourId, @success)
        ///
        ///SELECT * FROM eddsdbo.ServerCleanups
        ///WHERE Id = @@IDENTITY.
        /// </summary>
        internal static string ServerCleanup_Create {
            get {
                return ResourceManager.GetString("ServerCleanup_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///--@serverCleanupId
        ///
        ///SELECT *
        ///FROM eddsdbo.ServerCleanups with(nolock)
        ///WHERE Id = @serverCleanupId.
        /// </summary>
        internal static string ServerCleanup_Read {
            get {
                return ResourceManager.GetString("ServerCleanup_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///--@serverCleanupId
        ///
        ///UPDATE eddsdbo.ServerCleanups
        ///SET ServerId = @serverId, HourId = @hourId, Success = @success
        ///WHERE Id = @id.
        /// </summary>
        internal static string ServerCleanup_Update {
            get {
                return ResourceManager.GetString("ServerCleanup_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- EDDSPerformance
        ///
        ///SELECT s.*
        ///FROM eddsdbo.[MockServer] ms
        ///INNER JOIN eddsdbo.[Server] s on ms.ServerId = s.ServerId.
        /// </summary>
        internal static string ServerTest_ReadAllActive {
            get {
                return ResourceManager.GetString("ServerTest_ReadAllActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///UPDATE [eddsdbo].[ProcessControl]
        ///SET Frequency = @frequency
        ///WHERE ProcessControlID = @processControlId.
        /// </summary>
        internal static string SetProcessControlFrequency {
            get {
                return ResourceManager.GetString("SetProcessControlFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @server nvarchar(max),
        ///	@port nvarchar(max),
        ///	@from nvarchar(max),
        ///	@to nvarchar(max),
        ///	@username nvarchar(max),
        ///	@password nvarchar(max),
        ///	@encryptedPassword nvarchar(max),
        ///	@SMTPSSLisRequired nvarchar(max);
        ///	
        ///SET @server = (
        ///	SELECT TOP 1 [Value]
        ///	FROM [EDDS].[eddsdbo].[Configuration] WITH(NOLOCK)
        ///	WHERE Section = &apos;kCura.Notification&apos;
        ///	AND Name = &apos;SMTPServer&apos;
        ///);
        ///
        ///SET @port = (
        ///	SELECT TOP 1 [Value]
        ///	FROM [EDDS].[eddsdbo].[Configuration] WITH(NOLOCK)
        ///	WHERE Section = &apos;kCura.Notification&apos;
        ///	AND Name  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SMTPSettings {
            get {
                return ResourceManager.GetString("SMTPSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Run against workspace database
        ///-- Arguments required (@beginDate, @endDate, @action)
        ///IF EXISTS(SELECT TOP 1 * -- TODO Paging
        ///	FROM [eddsdbo].[AuditRecord] a WITH ( NOLOCK )
        ///	WHERE a.[Action] in @action
        ///		AND [TimeStamp] &gt;= @beginDate
        ///		AND [Timestamp] &lt; @endDate)
        ///	SELECT 1 
        ///ELSE SELECT 0.
        /// </summary>
        internal static string SqlAudit_ReadAnyAudits {
            get {
                return ResourceManager.GetString("SqlAudit_ReadAnyAudits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Run against workspace database
        ///-- Arguments required (@beginDate, @endDate, @action, @pageStart (default to -1))
        ///SELECT * FROM (
        ///SELECT
        ///	a.ID as AuditID,
        ///    a.[ArtifactID],
        ///    a.[Details],
        ///    UserID,
        ///    [TimeStamp],
        ///    [Action],
        ///    ExecutionTime,
        ///    RequestOrigination,
        ///	@workspaceId as WorkspaceID
        ///	,ROW_NUMBER() OVER(ORDER BY (a.ID)) as RowNum
        ///FROM [eddsdbo].[AuditRecord] a with(nolock)
        ///WHERE a.[Action] in @action
        ///	AND [TimeStamp] &gt;= @beginDate
        ///	AND [Timestamp] &lt; @endDate
        ///) AS RowConstrainedResult [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlAudit_ReadAuditsForHour {
            get {
                return ResourceManager.GetString("SqlAudit_ReadAuditsForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Run against workspace database
        ///-- Arguments required (@beginDate, @endDate, @action)
        ///SELECT COUNT(*) -- TODO Paging
        ///FROM [eddsdbo].[AuditRecord] a WITH ( NOLOCK )
        ///WHERE a.[Action] in @action
        ///	AND [TimeStamp] &gt;= @beginDate
        ///	AND [Timestamp] &lt; @endDate.
        /// </summary>
        internal static string SqlAudit_ReadTotalAuditsForHour {
            get {
                return ResourceManager.GetString("SqlAudit_ReadTotalAuditsForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Run against workspace database
        ///-- Arguments required (@beginDate, @endDate, @action)
        ///SELECT COUNT(*)
        ///FROM [eddsdbo].[AuditRecord] a WITH ( NOLOCK )
        ///WHERE a.[Action] in @action
        ///	AND [TimeStamp] &gt;= @beginDate
        ///	AND [Timestamp] &lt; @endDate
        ///	AND [ExecutionTime] &gt; 2000.
        /// </summary>
        internal static string SqlAudit_ReadTotalLongRunningAuditsForHour {
            get {
                return ResourceManager.GetString("SqlAudit_ReadTotalLongRunningAuditsForHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Run against workspace database
        ///-- Arguments required (@beginDate, @endDate, @action)
        ///SELECT DISTINCT(UserId)
        ///FROM [eddsdbo].[AuditRecord] a WITH ( NOLOCK )
        ///WHERE a.[Action] in @action
        ///	AND [TimeStamp] &gt;= @beginDate
        ///	AND [Timestamp] &lt; @endDate.
        /// </summary>
        internal static string SqlAudit_ReadUniqueUsersForHourAudits {
            get {
                return ResourceManager.GetString("SqlAudit_ReadUniqueUsersForHourAudits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///UPDATE [eddsdbo].[ProcessControl]
        ///SET Frequency = 1
        ///WHERE ProcessControlID = 13 --Reconfiguration Notification.
        /// </summary>
        internal static string StageReconfigNoticeDelivery {
            get {
                return ResourceManager.GetString("StageReconfigNoticeDelivery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1
        ///	system_low_memory_signal_state
        ///FROM sys.dm_os_sys_memory WITH(NOLOCK).
        /// </summary>
        internal static string sys_LowMemorySignalState {
            get {
                return ResourceManager.GetString("sys_LowMemorySignalState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance
        ///
        ///DECLARE @monitoringMinutes INT = (
        ///	SELECT TOP 1 [Frequency]
        ///	FROM eddsdbo.ProcessControl
        ///	WHERE ProcessControlID = 18
        ///)
        ///
        ///SELECT
        ///	s.ServerTypeID,
        ///	s.ServerName,
        ///	--CPU Score
        ///	CAST(ISNULL(CASE
        ///		WHEN pw.PoisonWaits &gt; 0 THEN 0
        ///		WHEN cpu.AvgCPUPct &lt; 60 THEN 100
        ///		WHEN cpu.AvgCPUPct &gt; 85 THEN 0
        ///		ELSE (85.0 - cpu.AvgCPUPct)*100/25
        ///	END, 100) as int) CPUScore,
        ///	--RAM Score
        ///	CAST(ISNULL(CASE
        ///		WHEN pw.PoisonWaits &gt; 0 THEN 0
        ///		WHEN s.ServerTypeID = 1 AND ram.AvgRAMAvailable &gt;= 1048576 THEN 10 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SystemLoadMonitoring_ScoreForecast {
            get {
                return ResourceManager.GetString("SystemLoadMonitoring_ScoreForecast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDS
        ///
        ///IF NOT EXISTS (
        ///	select * FROM [EDDS].[eddsdbo].[Tab] t with(nolock)
        ///	inner join eddsdbo.Artifact a on a.ArtifactID = t.ArtifactID and ParentArtifactID = @parentArtifactID and a.ArtifactID = @artifactID
        ///	)
        ///BEGIN
        ///	insert into [EDDS].[eddsdbo].[Tab]
        ///		([ArtifactID], [Name], [DisplayOrder], [ObjectArtifactTypeID], [ExternalLink], [IsDefault], [TabDisplay], [Visible]) 
        ///	values
        ///		(@artifactId, @name, @displayOrder, NULL, @externalLink, 0, 0, 1)
        ///END
        ///ELSE
        ///BEGIN
        ///	update [EDDS].[eddsdbo].[Tab]
        ///	set	[Displa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Tab_CreateOrUpdate {
            get {
                return ResourceManager.GetString("Tab_CreateOrUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [EDDS].[eddsdbo].[Tab]
        ///WHERE ArtifactId in @artifactIds.
        /// </summary>
        internal static string Tab_DeleteAll {
            get {
                return ResourceManager.GetString("Tab_DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT T.Name, T.ArtifactId, T.DisplayOrder, T.ExternalLink, A.AncestorArtifactID as ParentArtifactId
        ///FROM eddsdbo.Tab T WITH(NOLOCK)
        ///INNER JOIN eddsdbo.ArtifactAncestry A WITH(NOLOCK)
        ///ON T.ArtifactID = A.ArtifactID
        ///WHERE A.AncestorArtifactID = @artifactId.
        /// </summary>
        internal static string Tab_ReadAllByParent {
            get {
                return ResourceManager.GetString("Tab_ReadAllByParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT T.ArtifactId, A.AncestorArtifactID as ParentArtifactId, T.Name, T.DisplayOrder, T.ExternalLink
        ///FROM eddsdbo.Tab T WITH(NOLOCK)
        ///INNER JOIN eddsdbo.ArtifactAncestry A WITH(NOLOCK)
        ///ON T.ArtifactID = A.ArtifactID
        ///WHERE Name = @tabName.
        /// </summary>
        internal static string Tab_ReadByName {
            get {
                return ResourceManager.GetString("Tab_ReadByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update [EDDS].[eddsdbo].[Tab]
        ///set	[DisplayOrder] = @displayOrder
        ///	,[ExternalLink] = @externalLink 
        ///where ArtifactId = @artifactId.
        /// </summary>
        internal static string Tab_Update {
            get {
                return ResourceManager.GetString("Tab_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///If PersistResponsibleAgents is True, this will just update LastChecked.
        ///Otherwise, the ResponsibleAgent column is also cleared.
        ///*/
        ///DECLARE @persistAgentClaims bit = ISNULL((
        ///		SELECT TOP 1
        ///			CASE WHEN [Value] = &apos;True&apos; THEN 1
        ///				ELSE 0
        ///			END
        ///		FROM EDDSPerformance.eddsdbo.Configuration
        ///		WHERE Section = &apos;kCura.PDB&apos;
        ///			AND Name = &apos;PersistResponsibleAgents&apos;
        ///	), 0);
        ///
        ///UPDATE [EDDSPerformance].[eddsdbo].[Server]
        ///SET [ResponsibleAgent] =
        ///		CASE
        ///			WHEN @persistAgentClaims = 0 THEN NULL --If the ResponsibleAg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnclaimServer {
            get {
                return ResourceManager.GetString("UnclaimServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSPerformance;
        ///
        ///DECLARE @scriptsVersion nvarchar(max) = (SELECT TOP 1 Value FROM [EDDSPerformance].[eddsdbo].[Configuration] WHERE Section = &apos;kCura.PDB&apos; AND Name = &apos;AdminScriptsVersion&apos;)
        ///
        ///update eddsdbo.[Server]
        ///set AdminScriptsVersion = @scriptsVersion
        ///where 
        ///DeletedOn is null 
        ///and (IgnoreServer is null or IgnoreServer = 0)
        ///and ServerTypeID = 3.
        /// </summary>
        internal static string UpdateAdminScriptsInstalled {
            get {
                return ResourceManager.GetString("UpdateAdminScriptsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [EDDSPerformance].[eddsdbo].[DBCCTarget]
        ///SET DatabaseName = @dbName,
        ///	Active = @active
        ///WHERE DbccTargetId = @targetId.
        /// </summary>
        internal static string UpdateDbccTarget {
            get {
                return ResourceManager.GetString("UpdateDbccTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [EDDSPerformance]
        ///
        ////****** Object:  Table [eddsdbo].[RHVersion]    Script Date: 03/25/2014 15:31:03 ******/
        ///SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///CREATE TABLE [eddsdbo].[RHVersion](
        ///	[id] [bigint] IDENTITY(1,1) NOT NULL,
        ///	[repository_path] [nvarchar](255) NULL,
        ///	[version] [nvarchar](50) NULL,
        ///	[entry_date] [datetime] NULL,
        ///	[modified_date] [datetime] NULL,
        ///	[entered_by] [nvarchar](50) NULL,
        ///PRIMARY KEY CLUSTERED 
        ///(
        ///	[id] ASC
        ///)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeToRHVersion {
            get {
                return ResourceManager.GetString("UpgradeToRHVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [eddsdbo].[QoS_UptimeRatings]
        ///           ([HoursDown]
        ///           ,[SummaryDayHour]
        ///           ,[IsWebDowntime]
        ///		   ,[AffectedByMaintenanceWindow])
        ///     VALUES
        ///           (@hoursDown
        ///           ,@summaryDayHour
        ///           ,@isWebDowntime
        ///		   ,@affectedByMaintenanceWindow).
        /// </summary>
        internal static string UptimeRatings_Create {
            get {
                return ResourceManager.GetString("UptimeRatings_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(*)
        ///from eddsdbo.QoS_UptimeRatings
        ///where SummaryDayHour = @summaryDayHour.
        /// </summary>
        internal static string UptimeRatings_ReadBySummaryDayHour {
            get {
                return ResourceManager.GetString("UptimeRatings_ReadBySummaryDayHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;WITH scorableWeeks AS
        ///(
        ///	SELECT DATEADD(dd, 1-(DATEPART(dw, @summaryDayHour)), DATEDIFF(dd, 0, @summaryDayHour)) AS SummaryDayHour
        ///	UNION ALL (
        ///		SELECT DATEADD(wk, -1, SummaryDayHour)
        ///		FROM scorableWeeks
        ///		WHERE DATEADD(wk, -1, SummaryDayHour) &gt;= DATEADD(dd, -90, @summaryDayHour)
        ///	)
        ///)
        ///UPDATE u
        ///SET 
        ///	UptimeScore = (SELECT ISNULL(AVG(a.WeekUptimeScore), u.WeekUptimeScore)
        ///		FROM (
        ///			--Include all Trust hours in the last 90 days
        ///			SELECT
        ///				WeekUptimeScore
        ///			FROM eddsdbo.QoS_UptimeRatings ur
        ///			INNER JO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UptimeRatings_UpdateQuartlyScores {
            get {
                return ResourceManager.GetString("UptimeRatings_UpdateQuartlyScores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @summaryDayHourCheck datetime = (select top 1 SummaryDayHour FROM eddsdbo.QoS_UptimeRatings ud WHERE RowHash IS NULL order by SummaryDayHour asc)
        ///
        ///while (@summaryDayHourCheck is not null)
        ///begin
        ///
        ///	UPDATE ud
        ///	SET	WeekUptimeScore = (
        ///		SELECT TOP 1
        ///			CASE
        ///				WHEN UptimePercent &lt; 90 THEN 0 --17 hours of downtime results in max points lost
        ///				WHEN UptimePercent &gt;= 99.99 THEN 100 --1.008 minutes of downtime results in a score of 100
        ///				ELSE (UptimePercent - 90.0) * 100.0 / 9.99 --3.36 hours of downtim [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UptimeRatings_UpdateWeeklyScores {
            get {
                return ResourceManager.GetString("UptimeRatings_UpdateWeeklyScores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE EDDSQoS
        ///
        ///;WITH simpleQueries AS
        ///(
        ///	SELECT
        ///		UserID,
        ///		vod.SearchArtifactID,
        ///		CASE
        ///			WHEN SUM(ISNULL(ExecutionTime, 0)) &gt; 2000 THEN 0
        ///			ELSE 100
        ///		END SearchScore
        ///	FROM eddsdbo.QoS_VarscatOutputDetail vod WITH(NOLOCK)
        ///	WHERE QoSAction IN (281, 282, 283)
        ///		AND IsComplex = 0
        ///		AND [Timestamp] &gt;= DATEADD(HH, DATEDIFF(hh, 0, getUTCdate()) - 1, 0)
        ///		AND [Timestamp] &lt; DATEADD(HH, DATEDIFF(hh, 0, getUTCdate()), 0)
        ///	GROUP BY UserID, SearchArtifactID, ISNULL(CAST(vod.QueryID as varchar(36)), vod.VODID)
        ///),
        ///user [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserExMonitoring_ScoreForecast {
            get {
                return ResourceManager.GetString("UserExMonitoring_ScoreForecast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO eddsdbo.[UserExperience] 
        ///	(HourId
        ///	,ServerId
        ///	,ActiveUsers
        ///	,HasPoisonWaits
        ///	,ArrivalRate
        ///	,Concurrency)
        ///VALUES 
        ///	(@hourId
        ///	,@serverId
        ///	,@activeUsers
        ///	,@hasPoisonWaits
        ///	,@arrivalRate
        ///	,@concurrency)
        ///
        ///SELECT * FROM eddsdbo.[UserExperience] WHERE Id = @@IDENTITY.
        /// </summary>
        internal static string UserExperienceCache_Create {
            get {
                return ResourceManager.GetString("UserExperienceCache_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT *
        ///FROM eddsdbo.[UserExperience] with(nolock)
        ///WHERE [HourId] = @hourId AND [ServerId] = @serverId.
        /// </summary>
        internal static string UserExperienceCache_ReadByHourAndServer {
            get {
                return ResourceManager.GetString("UserExperienceCache_ReadByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- @serverId int, @start datetime, @end datetime
        ///
        ///
        ///
        ///SELECT *
        ///FROM eddsdbo.[UserExperience] ux with(nolock)
        ///INNER JOIN eddsdbo.[Hours] h with(nolock)
        ///	ON ux.HourId = h.Id
        ///WHERE ux.ServerId = @serverId
        ///	AND h.HourTimeStamp &gt;= @start
        ///	AND h.HourTimeStamp &lt;= @end
        ///	and h.Status != 4.
        /// </summary>
        internal static string UserExperienceCache_ReadByServerIdDateRange {
            get {
                return ResourceManager.GetString("UserExperienceCache_ReadByServerIdDateRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///INSERT INTO eddsdbo.QoS_UserExperienceRatings(
        ///	ServerArtifactId,
        ///	ArrivalRateUXScore,
        ///	ConcurrencyUXScore,
        ///	HourId)
        ///VALUES(
        ///	@serverArtifactId,
        ///	@arrivalRateUXScore,
        ///	@concurrencyUXScore,
        ///	@hourId).
        /// </summary>
        internal static string UserExperienceRating_Create {
            get {
                return ResourceManager.GetString("UserExperienceRating_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///SELECT * 
        ///FROM eddsdbo.QoS_UserExperienceRatings with(nolock)
        ///WHERE
        ///	ServerArtifactId = @ServerArtifactId
        ///	and HourId = @HourId.
        /// </summary>
        internal static string UserExperienceRating_ReadByHourAndServer {
            get {
                return ResourceManager.GetString("UserExperienceRating_ReadByHourAndServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ArtifactID, [SearchText], Name
        ///FROM [EDDSDBO].[View] WITH(NOLOCK)
        ///WHERE [ArtifactID] = @searchArtifactId.
        /// </summary>
        internal static string View_ReadBySearchId {
            get {
                return ResourceManager.GetString("View_ReadBySearchId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --DECLARE @searchArtifactId int = 1065485
        ///
        ///SELECT DISTINCT
        ///	vc.viewCriteriaID,
        ///    vc.Value,
        ///    case when vc.Operator = &apos;like&apos; and f.fieldTypeName in (&apos;Multiple Choice&apos;, &apos;Single Choice&apos;) -- Fix bogus &quot;Like&quot; operator
        ///		then &apos;choiceSearch&apos; else vc.Operator end as Operator,
        ///	case when vf.ArtifactViewFieldID is null then 1 else 0 end as IsSubQuery
        ///FROM eddsdbo.[View] v WITH(NOLOCK)
        ///LEFT JOIN eddsdbo.ViewCriteria vc WITH(NOLOCK)
        ///	ON v.ArtifactID = vc.viewID
        ///LEFT JOIN eddsdbo.ExtendedField f WITH(NOLOCK)
        ///	ON f.A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ViewCriteria_ReadBySearchId {
            get {
                return ResourceManager.GetString("ViewCriteria_ReadBySearchId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select top 1 [Status] from eddsdbo.WorkspaceUpgradeStatus where [ArtifactID] = @workspaceId.
        /// </summary>
        internal static string Workspace_ReadStatus {
            get {
                return ResourceManager.GetString("Workspace_ReadStatus", resourceCulture);
            }
        }
    }
}
